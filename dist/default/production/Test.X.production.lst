

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 29 11:48:11 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 28/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1829 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     018E                     	;# 
   150     0191                     	;# 
   151     0191                     	;# 
   152     0192                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0193                     	;# 
   156     0194                     	;# 
   157     0195                     	;# 
   158     0196                     	;# 
   159     0199                     	;# 
   160     019A                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019C                     	;# 
   164     019D                     	;# 
   165     019E                     	;# 
   166     019F                     	;# 
   167     020C                     	;# 
   168     020D                     	;# 
   169     020E                     	;# 
   170     0211                     	;# 
   171     0211                     	;# 
   172     0212                     	;# 
   173     0212                     	;# 
   174     0213                     	;# 
   175     0213                     	;# 
   176     0214                     	;# 
   177     0214                     	;# 
   178     0215                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0216                     	;# 
   182     0216                     	;# 
   183     0217                     	;# 
   184     0217                     	;# 
   185     0219                     	;# 
   186     021A                     	;# 
   187     021B                     	;# 
   188     021C                     	;# 
   189     021D                     	;# 
   190     021E                     	;# 
   191     021F                     	;# 
   192     0291                     	;# 
   193     0291                     	;# 
   194     0292                     	;# 
   195     0293                     	;# 
   196     0294                     	;# 
   197     0295                     	;# 
   198     0295                     	;# 
   199     0296                     	;# 
   200     0298                     	;# 
   201     0298                     	;# 
   202     0299                     	;# 
   203     029A                     	;# 
   204     029B                     	;# 
   205     029C                     	;# 
   206     029D                     	;# 
   207     029E                     	;# 
   208     029E                     	;# 
   209     0311                     	;# 
   210     0311                     	;# 
   211     0312                     	;# 
   212     0313                     	;# 
   213     0318                     	;# 
   214     0318                     	;# 
   215     0319                     	;# 
   216     031A                     	;# 
   217     038C                     	;# 
   218     038D                     	;# 
   219     038E                     	;# 
   220     0391                     	;# 
   221     0392                     	;# 
   222     0393                     	;# 
   223     0394                     	;# 
   224     0395                     	;# 
   225     0396                     	;# 
   226     039A                     	;# 
   227     039C                     	;# 
   228     039D                     	;# 
   229     039E                     	;# 
   230     039F                     	;# 
   231     0415                     	;# 
   232     0416                     	;# 
   233     0417                     	;# 
   234     041C                     	;# 
   235     041D                     	;# 
   236     041E                     	;# 
   237     0FE4                     	;# 
   238     0FE5                     	;# 
   239     0FE6                     	;# 
   240     0FE7                     	;# 
   241     0FE8                     	;# 
   242     0FE9                     	;# 
   243     0FEA                     	;# 
   244     0FEB                     	;# 
   245     0FED                     	;# 
   246     0FEE                     	;# 
   247     0FEF                     	;# 
   248     0000                     	;# 
   249     0001                     	;# 
   250     0002                     	;# 
   251     0003                     	;# 
   252     0004                     	;# 
   253     0005                     	;# 
   254     0006                     	;# 
   255     0007                     	;# 
   256     0008                     	;# 
   257     0009                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     000E                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009B                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     0111                     	;# 
   300     0112                     	;# 
   301     0113                     	;# 
   302     0114                     	;# 
   303     0115                     	;# 
   304     0116                     	;# 
   305     0117                     	;# 
   306     0118                     	;# 
   307     0119                     	;# 
   308     011A                     	;# 
   309     011B                     	;# 
   310     011D                     	;# 
   311     011E                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     018E                     	;# 
   315     0191                     	;# 
   316     0191                     	;# 
   317     0192                     	;# 
   318     0193                     	;# 
   319     0193                     	;# 
   320     0193                     	;# 
   321     0194                     	;# 
   322     0195                     	;# 
   323     0196                     	;# 
   324     0199                     	;# 
   325     019A                     	;# 
   326     019B                     	;# 
   327     019B                     	;# 
   328     019C                     	;# 
   329     019D                     	;# 
   330     019E                     	;# 
   331     019F                     	;# 
   332     020C                     	;# 
   333     020D                     	;# 
   334     020E                     	;# 
   335     0211                     	;# 
   336     0211                     	;# 
   337     0212                     	;# 
   338     0212                     	;# 
   339     0213                     	;# 
   340     0213                     	;# 
   341     0214                     	;# 
   342     0214                     	;# 
   343     0215                     	;# 
   344     0215                     	;# 
   345     0215                     	;# 
   346     0216                     	;# 
   347     0216                     	;# 
   348     0217                     	;# 
   349     0217                     	;# 
   350     0219                     	;# 
   351     021A                     	;# 
   352     021B                     	;# 
   353     021C                     	;# 
   354     021D                     	;# 
   355     021E                     	;# 
   356     021F                     	;# 
   357     0291                     	;# 
   358     0291                     	;# 
   359     0292                     	;# 
   360     0293                     	;# 
   361     0294                     	;# 
   362     0295                     	;# 
   363     0295                     	;# 
   364     0296                     	;# 
   365     0298                     	;# 
   366     0298                     	;# 
   367     0299                     	;# 
   368     029A                     	;# 
   369     029B                     	;# 
   370     029C                     	;# 
   371     029D                     	;# 
   372     029E                     	;# 
   373     029E                     	;# 
   374     0311                     	;# 
   375     0311                     	;# 
   376     0312                     	;# 
   377     0313                     	;# 
   378     0318                     	;# 
   379     0318                     	;# 
   380     0319                     	;# 
   381     031A                     	;# 
   382     038C                     	;# 
   383     038D                     	;# 
   384     038E                     	;# 
   385     0391                     	;# 
   386     0392                     	;# 
   387     0393                     	;# 
   388     0394                     	;# 
   389     0395                     	;# 
   390     0396                     	;# 
   391     039A                     	;# 
   392     039C                     	;# 
   393     039D                     	;# 
   394     039E                     	;# 
   395     039F                     	;# 
   396     0415                     	;# 
   397     0416                     	;# 
   398     0417                     	;# 
   399     041C                     	;# 
   400     041D                     	;# 
   401     041E                     	;# 
   402     0FE4                     	;# 
   403     0FE5                     	;# 
   404     0FE6                     	;# 
   405     0FE7                     	;# 
   406     0FE8                     	;# 
   407     0FE9                     	;# 
   408     0FEA                     	;# 
   409     0FEB                     	;# 
   410     0FED                     	;# 
   411     0FEE                     	;# 
   412     0FEF                     	;# 
   413     0000                     	;# 
   414     0001                     	;# 
   415     0002                     	;# 
   416     0003                     	;# 
   417     0004                     	;# 
   418     0005                     	;# 
   419     0006                     	;# 
   420     0007                     	;# 
   421     0008                     	;# 
   422     0009                     	;# 
   423     000A                     	;# 
   424     000B                     	;# 
   425     000C                     	;# 
   426     000D                     	;# 
   427     000E                     	;# 
   428     0011                     	;# 
   429     0012                     	;# 
   430     0013                     	;# 
   431     0014                     	;# 
   432     0015                     	;# 
   433     0016                     	;# 
   434     0016                     	;# 
   435     0017                     	;# 
   436     0018                     	;# 
   437     0019                     	;# 
   438     001A                     	;# 
   439     001B                     	;# 
   440     001C                     	;# 
   441     001E                     	;# 
   442     001F                     	;# 
   443     008C                     	;# 
   444     008D                     	;# 
   445     008E                     	;# 
   446     0091                     	;# 
   447     0092                     	;# 
   448     0093                     	;# 
   449     0094                     	;# 
   450     0095                     	;# 
   451     0096                     	;# 
   452     0097                     	;# 
   453     0098                     	;# 
   454     0099                     	;# 
   455     009A                     	;# 
   456     009B                     	;# 
   457     009B                     	;# 
   458     009C                     	;# 
   459     009D                     	;# 
   460     009E                     	;# 
   461     010C                     	;# 
   462     010D                     	;# 
   463     010E                     	;# 
   464     0111                     	;# 
   465     0112                     	;# 
   466     0113                     	;# 
   467     0114                     	;# 
   468     0115                     	;# 
   469     0116                     	;# 
   470     0117                     	;# 
   471     0118                     	;# 
   472     0119                     	;# 
   473     011A                     	;# 
   474     011B                     	;# 
   475     011D                     	;# 
   476     011E                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479     018E                     	;# 
   480     0191                     	;# 
   481     0191                     	;# 
   482     0192                     	;# 
   483     0193                     	;# 
   484     0193                     	;# 
   485     0193                     	;# 
   486     0194                     	;# 
   487     0195                     	;# 
   488     0196                     	;# 
   489     0199                     	;# 
   490     019A                     	;# 
   491     019B                     	;# 
   492     019B                     	;# 
   493     019C                     	;# 
   494     019D                     	;# 
   495     019E                     	;# 
   496     019F                     	;# 
   497     020C                     	;# 
   498     020D                     	;# 
   499     020E                     	;# 
   500     0211                     	;# 
   501     0211                     	;# 
   502     0212                     	;# 
   503     0212                     	;# 
   504     0213                     	;# 
   505     0213                     	;# 
   506     0214                     	;# 
   507     0214                     	;# 
   508     0215                     	;# 
   509     0215                     	;# 
   510     0215                     	;# 
   511     0216                     	;# 
   512     0216                     	;# 
   513     0217                     	;# 
   514     0217                     	;# 
   515     0219                     	;# 
   516     021A                     	;# 
   517     021B                     	;# 
   518     021C                     	;# 
   519     021D                     	;# 
   520     021E                     	;# 
   521     021F                     	;# 
   522     0291                     	;# 
   523     0291                     	;# 
   524     0292                     	;# 
   525     0293                     	;# 
   526     0294                     	;# 
   527     0295                     	;# 
   528     0295                     	;# 
   529     0296                     	;# 
   530     0298                     	;# 
   531     0298                     	;# 
   532     0299                     	;# 
   533     029A                     	;# 
   534     029B                     	;# 
   535     029C                     	;# 
   536     029D                     	;# 
   537     029E                     	;# 
   538     029E                     	;# 
   539     0311                     	;# 
   540     0311                     	;# 
   541     0312                     	;# 
   542     0313                     	;# 
   543     0318                     	;# 
   544     0318                     	;# 
   545     0319                     	;# 
   546     031A                     	;# 
   547     038C                     	;# 
   548     038D                     	;# 
   549     038E                     	;# 
   550     0391                     	;# 
   551     0392                     	;# 
   552     0393                     	;# 
   553     0394                     	;# 
   554     0395                     	;# 
   555     0396                     	;# 
   556     039A                     	;# 
   557     039C                     	;# 
   558     039D                     	;# 
   559     039E                     	;# 
   560     039F                     	;# 
   561     0415                     	;# 
   562     0416                     	;# 
   563     0417                     	;# 
   564     041C                     	;# 
   565     041D                     	;# 
   566     041E                     	;# 
   567     0FE4                     	;# 
   568     0FE5                     	;# 
   569     0FE6                     	;# 
   570     0FE7                     	;# 
   571     0FE8                     	;# 
   572     0FE9                     	;# 
   573     0FEA                     	;# 
   574     0FEB                     	;# 
   575     0FED                     	;# 
   576     0FEE                     	;# 
   577     0FEF                     	;# 
   578     0000                     	;# 
   579     0001                     	;# 
   580     0002                     	;# 
   581     0003                     	;# 
   582     0004                     	;# 
   583     0005                     	;# 
   584     0006                     	;# 
   585     0007                     	;# 
   586     0008                     	;# 
   587     0009                     	;# 
   588     000A                     	;# 
   589     000B                     	;# 
   590     000C                     	;# 
   591     000D                     	;# 
   592     000E                     	;# 
   593     0011                     	;# 
   594     0012                     	;# 
   595     0013                     	;# 
   596     0014                     	;# 
   597     0015                     	;# 
   598     0016                     	;# 
   599     0016                     	;# 
   600     0017                     	;# 
   601     0018                     	;# 
   602     0019                     	;# 
   603     001A                     	;# 
   604     001B                     	;# 
   605     001C                     	;# 
   606     001E                     	;# 
   607     001F                     	;# 
   608     008C                     	;# 
   609     008D                     	;# 
   610     008E                     	;# 
   611     0091                     	;# 
   612     0092                     	;# 
   613     0093                     	;# 
   614     0094                     	;# 
   615     0095                     	;# 
   616     0096                     	;# 
   617     0097                     	;# 
   618     0098                     	;# 
   619     0099                     	;# 
   620     009A                     	;# 
   621     009B                     	;# 
   622     009B                     	;# 
   623     009C                     	;# 
   624     009D                     	;# 
   625     009E                     	;# 
   626     010C                     	;# 
   627     010D                     	;# 
   628     010E                     	;# 
   629     0111                     	;# 
   630     0112                     	;# 
   631     0113                     	;# 
   632     0114                     	;# 
   633     0115                     	;# 
   634     0116                     	;# 
   635     0117                     	;# 
   636     0118                     	;# 
   637     0119                     	;# 
   638     011A                     	;# 
   639     011B                     	;# 
   640     011D                     	;# 
   641     011E                     	;# 
   642     018C                     	;# 
   643     018D                     	;# 
   644     018E                     	;# 
   645     0191                     	;# 
   646     0191                     	;# 
   647     0192                     	;# 
   648     0193                     	;# 
   649     0193                     	;# 
   650     0193                     	;# 
   651     0194                     	;# 
   652     0195                     	;# 
   653     0196                     	;# 
   654     0199                     	;# 
   655     019A                     	;# 
   656     019B                     	;# 
   657     019B                     	;# 
   658     019C                     	;# 
   659     019D                     	;# 
   660     019E                     	;# 
   661     019F                     	;# 
   662     020C                     	;# 
   663     020D                     	;# 
   664     020E                     	;# 
   665     0211                     	;# 
   666     0211                     	;# 
   667     0212                     	;# 
   668     0212                     	;# 
   669     0213                     	;# 
   670     0213                     	;# 
   671     0214                     	;# 
   672     0214                     	;# 
   673     0215                     	;# 
   674     0215                     	;# 
   675     0215                     	;# 
   676     0216                     	;# 
   677     0216                     	;# 
   678     0217                     	;# 
   679     0217                     	;# 
   680     0219                     	;# 
   681     021A                     	;# 
   682     021B                     	;# 
   683     021C                     	;# 
   684     021D                     	;# 
   685     021E                     	;# 
   686     021F                     	;# 
   687     0291                     	;# 
   688     0291                     	;# 
   689     0292                     	;# 
   690     0293                     	;# 
   691     0294                     	;# 
   692     0295                     	;# 
   693     0295                     	;# 
   694     0296                     	;# 
   695     0298                     	;# 
   696     0298                     	;# 
   697     0299                     	;# 
   698     029A                     	;# 
   699     029B                     	;# 
   700     029C                     	;# 
   701     029D                     	;# 
   702     029E                     	;# 
   703     029E                     	;# 
   704     0311                     	;# 
   705     0311                     	;# 
   706     0312                     	;# 
   707     0313                     	;# 
   708     0318                     	;# 
   709     0318                     	;# 
   710     0319                     	;# 
   711     031A                     	;# 
   712     038C                     	;# 
   713     038D                     	;# 
   714     038E                     	;# 
   715     0391                     	;# 
   716     0392                     	;# 
   717     0393                     	;# 
   718     0394                     	;# 
   719     0395                     	;# 
   720     0396                     	;# 
   721     039A                     	;# 
   722     039C                     	;# 
   723     039D                     	;# 
   724     039E                     	;# 
   725     039F                     	;# 
   726     0415                     	;# 
   727     0416                     	;# 
   728     0417                     	;# 
   729     041C                     	;# 
   730     041D                     	;# 
   731     041E                     	;# 
   732     0FE4                     	;# 
   733     0FE5                     	;# 
   734     0FE6                     	;# 
   735     0FE7                     	;# 
   736     0FE8                     	;# 
   737     0FE9                     	;# 
   738     0FEA                     	;# 
   739     0FEB                     	;# 
   740     0FED                     	;# 
   741     0FEE                     	;# 
   742     0FEF                     	;# 
   743     0000                     	;# 
   744     0001                     	;# 
   745     0002                     	;# 
   746     0003                     	;# 
   747     0004                     	;# 
   748     0005                     	;# 
   749     0006                     	;# 
   750     0007                     	;# 
   751     0008                     	;# 
   752     0009                     	;# 
   753     000A                     	;# 
   754     000B                     	;# 
   755     000C                     	;# 
   756     000D                     	;# 
   757     000E                     	;# 
   758     0011                     	;# 
   759     0012                     	;# 
   760     0013                     	;# 
   761     0014                     	;# 
   762     0015                     	;# 
   763     0016                     	;# 
   764     0016                     	;# 
   765     0017                     	;# 
   766     0018                     	;# 
   767     0019                     	;# 
   768     001A                     	;# 
   769     001B                     	;# 
   770     001C                     	;# 
   771     001E                     	;# 
   772     001F                     	;# 
   773     008C                     	;# 
   774     008D                     	;# 
   775     008E                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     010E                     	;# 
   794     0111                     	;# 
   795     0112                     	;# 
   796     0113                     	;# 
   797     0114                     	;# 
   798     0115                     	;# 
   799     0116                     	;# 
   800     0117                     	;# 
   801     0118                     	;# 
   802     0119                     	;# 
   803     011A                     	;# 
   804     011B                     	;# 
   805     011D                     	;# 
   806     011E                     	;# 
   807     018C                     	;# 
   808     018D                     	;# 
   809     018E                     	;# 
   810     0191                     	;# 
   811     0191                     	;# 
   812     0192                     	;# 
   813     0193                     	;# 
   814     0193                     	;# 
   815     0193                     	;# 
   816     0194                     	;# 
   817     0195                     	;# 
   818     0196                     	;# 
   819     0199                     	;# 
   820     019A                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019D                     	;# 
   825     019E                     	;# 
   826     019F                     	;# 
   827     020C                     	;# 
   828     020D                     	;# 
   829     020E                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029D                     	;# 
   867     029E                     	;# 
   868     029E                     	;# 
   869     0311                     	;# 
   870     0311                     	;# 
   871     0312                     	;# 
   872     0313                     	;# 
   873     0318                     	;# 
   874     0318                     	;# 
   875     0319                     	;# 
   876     031A                     	;# 
   877     038C                     	;# 
   878     038D                     	;# 
   879     038E                     	;# 
   880     0391                     	;# 
   881     0392                     	;# 
   882     0393                     	;# 
   883     0394                     	;# 
   884     0395                     	;# 
   885     0396                     	;# 
   886     039A                     	;# 
   887     039C                     	;# 
   888     039D                     	;# 
   889     039E                     	;# 
   890     039F                     	;# 
   891     0415                     	;# 
   892     0416                     	;# 
   893     0417                     	;# 
   894     041C                     	;# 
   895     041D                     	;# 
   896     041E                     	;# 
   897     0FE4                     	;# 
   898     0FE5                     	;# 
   899     0FE6                     	;# 
   900     0FE7                     	;# 
   901     0FE8                     	;# 
   902     0FE9                     	;# 
   903     0FEA                     	;# 
   904     0FEB                     	;# 
   905     0FED                     	;# 
   906     0FEE                     	;# 
   907     0FEF                     	;# 
   908     0000                     	;# 
   909     0001                     	;# 
   910     0002                     	;# 
   911     0003                     	;# 
   912     0004                     	;# 
   913     0005                     	;# 
   914     0006                     	;# 
   915     0007                     	;# 
   916     0008                     	;# 
   917     0009                     	;# 
   918     000A                     	;# 
   919     000B                     	;# 
   920     000C                     	;# 
   921     000D                     	;# 
   922     000E                     	;# 
   923     0011                     	;# 
   924     0012                     	;# 
   925     0013                     	;# 
   926     0014                     	;# 
   927     0015                     	;# 
   928     0016                     	;# 
   929     0016                     	;# 
   930     0017                     	;# 
   931     0018                     	;# 
   932     0019                     	;# 
   933     001A                     	;# 
   934     001B                     	;# 
   935     001C                     	;# 
   936     001E                     	;# 
   937     001F                     	;# 
   938     008C                     	;# 
   939     008D                     	;# 
   940     008E                     	;# 
   941     0091                     	;# 
   942     0092                     	;# 
   943     0093                     	;# 
   944     0094                     	;# 
   945     0095                     	;# 
   946     0096                     	;# 
   947     0097                     	;# 
   948     0098                     	;# 
   949     0099                     	;# 
   950     009A                     	;# 
   951     009B                     	;# 
   952     009B                     	;# 
   953     009C                     	;# 
   954     009D                     	;# 
   955     009E                     	;# 
   956     010C                     	;# 
   957     010D                     	;# 
   958     010E                     	;# 
   959     0111                     	;# 
   960     0112                     	;# 
   961     0113                     	;# 
   962     0114                     	;# 
   963     0115                     	;# 
   964     0116                     	;# 
   965     0117                     	;# 
   966     0118                     	;# 
   967     0119                     	;# 
   968     011A                     	;# 
   969     011B                     	;# 
   970     011D                     	;# 
   971     011E                     	;# 
   972     018C                     	;# 
   973     018D                     	;# 
   974     018E                     	;# 
   975     0191                     	;# 
   976     0191                     	;# 
   977     0192                     	;# 
   978     0193                     	;# 
   979     0193                     	;# 
   980     0193                     	;# 
   981     0194                     	;# 
   982     0195                     	;# 
   983     0196                     	;# 
   984     0199                     	;# 
   985     019A                     	;# 
   986     019B                     	;# 
   987     019B                     	;# 
   988     019C                     	;# 
   989     019D                     	;# 
   990     019E                     	;# 
   991     019F                     	;# 
   992     020C                     	;# 
   993     020D                     	;# 
   994     020E                     	;# 
   995     0211                     	;# 
   996     0211                     	;# 
   997     0212                     	;# 
   998     0212                     	;# 
   999     0213                     	;# 
  1000     0213                     	;# 
  1001     0214                     	;# 
  1002     0214                     	;# 
  1003     0215                     	;# 
  1004     0215                     	;# 
  1005     0215                     	;# 
  1006     0216                     	;# 
  1007     0216                     	;# 
  1008     0217                     	;# 
  1009     0217                     	;# 
  1010     0219                     	;# 
  1011     021A                     	;# 
  1012     021B                     	;# 
  1013     021C                     	;# 
  1014     021D                     	;# 
  1015     021E                     	;# 
  1016     021F                     	;# 
  1017     0291                     	;# 
  1018     0291                     	;# 
  1019     0292                     	;# 
  1020     0293                     	;# 
  1021     0294                     	;# 
  1022     0295                     	;# 
  1023     0295                     	;# 
  1024     0296                     	;# 
  1025     0298                     	;# 
  1026     0298                     	;# 
  1027     0299                     	;# 
  1028     029A                     	;# 
  1029     029B                     	;# 
  1030     029C                     	;# 
  1031     029D                     	;# 
  1032     029E                     	;# 
  1033     029E                     	;# 
  1034     0311                     	;# 
  1035     0311                     	;# 
  1036     0312                     	;# 
  1037     0313                     	;# 
  1038     0318                     	;# 
  1039     0318                     	;# 
  1040     0319                     	;# 
  1041     031A                     	;# 
  1042     038C                     	;# 
  1043     038D                     	;# 
  1044     038E                     	;# 
  1045     0391                     	;# 
  1046     0392                     	;# 
  1047     0393                     	;# 
  1048     0394                     	;# 
  1049     0395                     	;# 
  1050     0396                     	;# 
  1051     039A                     	;# 
  1052     039C                     	;# 
  1053     039D                     	;# 
  1054     039E                     	;# 
  1055     039F                     	;# 
  1056     0415                     	;# 
  1057     0416                     	;# 
  1058     0417                     	;# 
  1059     041C                     	;# 
  1060     041D                     	;# 
  1061     041E                     	;# 
  1062     0FE4                     	;# 
  1063     0FE5                     	;# 
  1064     0FE6                     	;# 
  1065     0FE7                     	;# 
  1066     0FE8                     	;# 
  1067     0FE9                     	;# 
  1068     0FEA                     	;# 
  1069     0FEB                     	;# 
  1070     0FED                     	;# 
  1071     0FEE                     	;# 
  1072     0FEF                     	;# 
  1073     0000                     	;# 
  1074     0001                     	;# 
  1075     0002                     	;# 
  1076     0003                     	;# 
  1077     0004                     	;# 
  1078     0005                     	;# 
  1079     0006                     	;# 
  1080     0007                     	;# 
  1081     0008                     	;# 
  1082     0009                     	;# 
  1083     000A                     	;# 
  1084     000B                     	;# 
  1085     000C                     	;# 
  1086     000D                     	;# 
  1087     000E                     	;# 
  1088     0011                     	;# 
  1089     0012                     	;# 
  1090     0013                     	;# 
  1091     0014                     	;# 
  1092     0015                     	;# 
  1093     0016                     	;# 
  1094     0016                     	;# 
  1095     0017                     	;# 
  1096     0018                     	;# 
  1097     0019                     	;# 
  1098     001A                     	;# 
  1099     001B                     	;# 
  1100     001C                     	;# 
  1101     001E                     	;# 
  1102     001F                     	;# 
  1103     008C                     	;# 
  1104     008D                     	;# 
  1105     008E                     	;# 
  1106     0091                     	;# 
  1107     0092                     	;# 
  1108     0093                     	;# 
  1109     0094                     	;# 
  1110     0095                     	;# 
  1111     0096                     	;# 
  1112     0097                     	;# 
  1113     0098                     	;# 
  1114     0099                     	;# 
  1115     009A                     	;# 
  1116     009B                     	;# 
  1117     009B                     	;# 
  1118     009C                     	;# 
  1119     009D                     	;# 
  1120     009E                     	;# 
  1121     010C                     	;# 
  1122     010D                     	;# 
  1123     010E                     	;# 
  1124     0111                     	;# 
  1125     0112                     	;# 
  1126     0113                     	;# 
  1127     0114                     	;# 
  1128     0115                     	;# 
  1129     0116                     	;# 
  1130     0117                     	;# 
  1131     0118                     	;# 
  1132     0119                     	;# 
  1133     011A                     	;# 
  1134     011B                     	;# 
  1135     011D                     	;# 
  1136     011E                     	;# 
  1137     018C                     	;# 
  1138     018D                     	;# 
  1139     018E                     	;# 
  1140     0191                     	;# 
  1141     0191                     	;# 
  1142     0192                     	;# 
  1143     0193                     	;# 
  1144     0193                     	;# 
  1145     0193                     	;# 
  1146     0194                     	;# 
  1147     0195                     	;# 
  1148     0196                     	;# 
  1149     0199                     	;# 
  1150     019A                     	;# 
  1151     019B                     	;# 
  1152     019B                     	;# 
  1153     019C                     	;# 
  1154     019D                     	;# 
  1155     019E                     	;# 
  1156     019F                     	;# 
  1157     020C                     	;# 
  1158     020D                     	;# 
  1159     020E                     	;# 
  1160     0211                     	;# 
  1161     0211                     	;# 
  1162     0212                     	;# 
  1163     0212                     	;# 
  1164     0213                     	;# 
  1165     0213                     	;# 
  1166     0214                     	;# 
  1167     0214                     	;# 
  1168     0215                     	;# 
  1169     0215                     	;# 
  1170     0215                     	;# 
  1171     0216                     	;# 
  1172     0216                     	;# 
  1173     0217                     	;# 
  1174     0217                     	;# 
  1175     0219                     	;# 
  1176     021A                     	;# 
  1177     021B                     	;# 
  1178     021C                     	;# 
  1179     021D                     	;# 
  1180     021E                     	;# 
  1181     021F                     	;# 
  1182     0291                     	;# 
  1183     0291                     	;# 
  1184     0292                     	;# 
  1185     0293                     	;# 
  1186     0294                     	;# 
  1187     0295                     	;# 
  1188     0295                     	;# 
  1189     0296                     	;# 
  1190     0298                     	;# 
  1191     0298                     	;# 
  1192     0299                     	;# 
  1193     029A                     	;# 
  1194     029B                     	;# 
  1195     029C                     	;# 
  1196     029D                     	;# 
  1197     029E                     	;# 
  1198     029E                     	;# 
  1199     0311                     	;# 
  1200     0311                     	;# 
  1201     0312                     	;# 
  1202     0313                     	;# 
  1203     0318                     	;# 
  1204     0318                     	;# 
  1205     0319                     	;# 
  1206     031A                     	;# 
  1207     038C                     	;# 
  1208     038D                     	;# 
  1209     038E                     	;# 
  1210     0391                     	;# 
  1211     0392                     	;# 
  1212     0393                     	;# 
  1213     0394                     	;# 
  1214     0395                     	;# 
  1215     0396                     	;# 
  1216     039A                     	;# 
  1217     039C                     	;# 
  1218     039D                     	;# 
  1219     039E                     	;# 
  1220     039F                     	;# 
  1221     0415                     	;# 
  1222     0416                     	;# 
  1223     0417                     	;# 
  1224     041C                     	;# 
  1225     041D                     	;# 
  1226     041E                     	;# 
  1227     0FE4                     	;# 
  1228     0FE5                     	;# 
  1229     0FE6                     	;# 
  1230     0FE7                     	;# 
  1231     0FE8                     	;# 
  1232     0FE9                     	;# 
  1233     0FEA                     	;# 
  1234     0FEB                     	;# 
  1235     0FED                     	;# 
  1236     0FEE                     	;# 
  1237     0FEF                     	;# 
  1238     0000                     	;# 
  1239     0001                     	;# 
  1240     0002                     	;# 
  1241     0003                     	;# 
  1242     0004                     	;# 
  1243     0005                     	;# 
  1244     0006                     	;# 
  1245     0007                     	;# 
  1246     0008                     	;# 
  1247     0009                     	;# 
  1248     000A                     	;# 
  1249     000B                     	;# 
  1250     000C                     	;# 
  1251     000D                     	;# 
  1252     000E                     	;# 
  1253     0011                     	;# 
  1254     0012                     	;# 
  1255     0013                     	;# 
  1256     0014                     	;# 
  1257     0015                     	;# 
  1258     0016                     	;# 
  1259     0016                     	;# 
  1260     0017                     	;# 
  1261     0018                     	;# 
  1262     0019                     	;# 
  1263     001A                     	;# 
  1264     001B                     	;# 
  1265     001C                     	;# 
  1266     001E                     	;# 
  1267     001F                     	;# 
  1268     008C                     	;# 
  1269     008D                     	;# 
  1270     008E                     	;# 
  1271     0091                     	;# 
  1272     0092                     	;# 
  1273     0093                     	;# 
  1274     0094                     	;# 
  1275     0095                     	;# 
  1276     0096                     	;# 
  1277     0097                     	;# 
  1278     0098                     	;# 
  1279     0099                     	;# 
  1280     009A                     	;# 
  1281     009B                     	;# 
  1282     009B                     	;# 
  1283     009C                     	;# 
  1284     009D                     	;# 
  1285     009E                     	;# 
  1286     010C                     	;# 
  1287     010D                     	;# 
  1288     010E                     	;# 
  1289     0111                     	;# 
  1290     0112                     	;# 
  1291     0113                     	;# 
  1292     0114                     	;# 
  1293     0115                     	;# 
  1294     0116                     	;# 
  1295     0117                     	;# 
  1296     0118                     	;# 
  1297     0119                     	;# 
  1298     011A                     	;# 
  1299     011B                     	;# 
  1300     011D                     	;# 
  1301     011E                     	;# 
  1302     018C                     	;# 
  1303     018D                     	;# 
  1304     018E                     	;# 
  1305     0191                     	;# 
  1306     0191                     	;# 
  1307     0192                     	;# 
  1308     0193                     	;# 
  1309     0193                     	;# 
  1310     0193                     	;# 
  1311     0194                     	;# 
  1312     0195                     	;# 
  1313     0196                     	;# 
  1314     0199                     	;# 
  1315     019A                     	;# 
  1316     019B                     	;# 
  1317     019B                     	;# 
  1318     019C                     	;# 
  1319     019D                     	;# 
  1320     019E                     	;# 
  1321     019F                     	;# 
  1322     020C                     	;# 
  1323     020D                     	;# 
  1324     020E                     	;# 
  1325     0211                     	;# 
  1326     0211                     	;# 
  1327     0212                     	;# 
  1328     0212                     	;# 
  1329     0213                     	;# 
  1330     0213                     	;# 
  1331     0214                     	;# 
  1332     0214                     	;# 
  1333     0215                     	;# 
  1334     0215                     	;# 
  1335     0215                     	;# 
  1336     0216                     	;# 
  1337     0216                     	;# 
  1338     0217                     	;# 
  1339     0217                     	;# 
  1340     0219                     	;# 
  1341     021A                     	;# 
  1342     021B                     	;# 
  1343     021C                     	;# 
  1344     021D                     	;# 
  1345     021E                     	;# 
  1346     021F                     	;# 
  1347     0291                     	;# 
  1348     0291                     	;# 
  1349     0292                     	;# 
  1350     0293                     	;# 
  1351     0294                     	;# 
  1352     0295                     	;# 
  1353     0295                     	;# 
  1354     0296                     	;# 
  1355     0298                     	;# 
  1356     0298                     	;# 
  1357     0299                     	;# 
  1358     029A                     	;# 
  1359     029B                     	;# 
  1360     029C                     	;# 
  1361     029D                     	;# 
  1362     029E                     	;# 
  1363     029E                     	;# 
  1364     0311                     	;# 
  1365     0311                     	;# 
  1366     0312                     	;# 
  1367     0313                     	;# 
  1368     0318                     	;# 
  1369     0318                     	;# 
  1370     0319                     	;# 
  1371     031A                     	;# 
  1372     038C                     	;# 
  1373     038D                     	;# 
  1374     038E                     	;# 
  1375     0391                     	;# 
  1376     0392                     	;# 
  1377     0393                     	;# 
  1378     0394                     	;# 
  1379     0395                     	;# 
  1380     0396                     	;# 
  1381     039A                     	;# 
  1382     039C                     	;# 
  1383     039D                     	;# 
  1384     039E                     	;# 
  1385     039F                     	;# 
  1386     0415                     	;# 
  1387     0416                     	;# 
  1388     0417                     	;# 
  1389     041C                     	;# 
  1390     041D                     	;# 
  1391     041E                     	;# 
  1392     0FE4                     	;# 
  1393     0FE5                     	;# 
  1394     0FE6                     	;# 
  1395     0FE7                     	;# 
  1396     0FE8                     	;# 
  1397     0FE9                     	;# 
  1398     0FEA                     	;# 
  1399     0FEB                     	;# 
  1400     0FED                     	;# 
  1401     0FEE                     	;# 
  1402     0FEF                     	;# 
  1403                           
  1404 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1405     0000                     
  1406 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1407     0000                     
  1408 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1409     0000                     
  1410                           	psect	idataBANK1
  1411     03C7                     __pidataBANK1:
  1412                           
  1413                           ;initializer for _DISPLAY_DATA
  1414     03C7  347D               	retlw	125
  1415     03C8  3441               	retlw	65
  1416     03C9  34DC               	retlw	220
  1417     03CA  34D5               	retlw	213
  1418     03CB  34E1               	retlw	225
  1419     03CC  34B5               	retlw	181
  1420     03CD  34BD               	retlw	189
  1421     03CE  3451               	retlw	81
  1422     03CF  34FD               	retlw	253
  1423     03D0  34F5               	retlw	245
  1424                           
  1425                           	psect	stringtext1
  1426     0397                     __pstringtext1:
  1427     0397                     _spi1_configuration:
  1428     0397  3402               	retlw	2
  1429     0398  3440               	retlw	64
  1430     0399  3401               	retlw	1
  1431     039A  3400               	retlw	0
  1432     039B                     __end_of_spi1_configuration:
  1433     0019                     _T1GCONbits	set	25
  1434     0018                     _T1CONbits	set	24
  1435     0018                     _T1CON	set	24
  1436     0016                     _TMR1L	set	22
  1437     0017                     _TMR1H	set	23
  1438     0019                     _T1GCON	set	25
  1439     0011                     _PIR1bits	set	17
  1440     000B                     _INTCONbits	set	11
  1441     008D                     _TRISBbits	set	141
  1442     0091                     _PIE1bits	set	145
  1443     0095                     _OPTION_REGbits	set	149
  1444     008E                     _TRISC	set	142
  1445     008D                     _TRISB	set	141
  1446     008C                     _TRISA	set	140
  1447     0097                     _WDTCON	set	151
  1448     0098                     _OSCTUNE	set	152
  1449     0099                     _OSCCON	set	153
  1450     04D6                     _PLLR	set	1238
  1451     010D                     _LATBbits	set	269
  1452     011E                     _APFCON1	set	286
  1453     011D                     _APFCON0	set	285
  1454     010E                     _LATC	set	270
  1455     010D                     _LATB	set	269
  1456     010C                     _LATA	set	268
  1457     0116                     _BORCON	set	278
  1458     019A                     _TXREG	set	410
  1459     0199                     _RCREG	set	409
  1460     019D                     _RCSTAbits	set	413
  1461     019E                     _TXSTAbits	set	414
  1462     019C                     _SPBRGH	set	412
  1463     019B                     _SPBRGL	set	411
  1464     019E                     _TXSTA	set	414
  1465     019D                     _RCSTA	set	413
  1466     019F                     _BAUDCON	set	415
  1467     018C                     _ANSELA	set	396
  1468     018D                     _ANSELB	set	397
  1469     018E                     _ANSELC	set	398
  1470     0211                     _SSP1BUF	set	529
  1471     0216                     _SSP1CON2	set	534
  1472     0215                     _SSP1CON1bits	set	533
  1473     0212                     _SSP1ADD	set	530
  1474     0215                     _SSP1CON1	set	533
  1475     0214                     _SSP1STAT	set	532
  1476     020E                     _WPUC	set	526
  1477     020C                     _WPUA	set	524
  1478     020D                     _WPUB	set	525
  1479     039B                     STR_1:
  1480     039B  3474               	retlw	116	;'t'
  1481     039C  3465               	retlw	101	;'e'
  1482     039D  346D               	retlw	109	;'m'
  1483     039E  3470               	retlw	112	;'p'
  1484     039F  3420               	retlw	32	;' '
  1485     03A0  3425               	retlw	37	;'%'
  1486     03A1  3478               	retlw	120	;'x'
  1487     03A2  3400               	retlw	0
  1488                           
  1489                           	psect	stringtext2
  1490     0000                     __pstringtext2:
  1491                           
  1492                           	psect	cinit
  1493     001B                     start_initialization:	
  1494                           ; #config settings
  1495                           
  1496     001B                     __initialization:
  1497                           
  1498                           ; Initialize objects allocated to BANK1
  1499     001B  30C7               	movlw	low __pidataBANK1
  1500     001C  0084               	movwf	4
  1501     001D  3083               	movlw	(high __pidataBANK1)| (0+128)
  1502     001E  0085               	movwf	5
  1503     001F  30CC               	movlw	low __pdataBANK1
  1504     0020  0086               	movwf	6
  1505     0021  3000               	movlw	high __pdataBANK1
  1506     0022  0087               	movwf	7
  1507     0023  300A               	movlw	10
  1508     0024  3183  23FD  3180   	fcall	init_ram
  1509                           
  1510                           ; Clear objects allocated to COMMON
  1511     0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1512     0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1513     0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1514     002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1515     002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1516     002C  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1517                           
  1518                           ; Clear objects allocated to BANK0
  1519     002D  01EB               	clrf	__pbssBANK0& (0+127)
  1520     002E  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1521     002F  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1522     0030  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1523                           
  1524                           ; Clear objects allocated to BANK1
  1525     0031  30A0               	movlw	low __pbssBANK1
  1526     0032  0084               	movwf	4
  1527     0033  3000               	movlw	high __pbssBANK1
  1528     0034  0085               	movwf	5
  1529     0035  302C               	movlw	44
  1530     0036  3184  2403  3180   	fcall	clear_ram0
  1531     0039                     end_of_initialization:	
  1532                           ;End of C runtime variable initialization code
  1533                           
  1534     0039                     __end_of__initialization:
  1535     0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1536     003A  0020               	movlb	0
  1537     003B  3183  2B3F         	ljmp	_main	;jump to C main() function
  1538                           
  1539                           	psect	bssCOMMON
  1540     0078                     __pbssCOMMON:
  1541     0078                     _width:
  1542     0078                     	ds	2
  1543     007A                     _TMR1_InterruptHandler:
  1544     007A                     	ds	2
  1545     007C                     _timer1ReloadVal:
  1546     007C                     	ds	2
  1547                           
  1548                           	psect	bssBANK0
  1549     006B                     __pbssBANK0:
  1550     006B                     _prec:
  1551     006B                     	ds	2
  1552     006D                     _flags:
  1553     006D                     	ds	1
  1554     006E                     _eusartRxLastError:
  1555     006E                     	ds	1
  1556                           
  1557                           	psect	bssBANK1
  1558     00A0                     __pbssBANK1:
  1559     00A0                     _EUSART_ErrorHandler:
  1560     00A0                     	ds	2
  1561     00A2                     _EUSART_OverrunErrorHandler:
  1562     00A2                     	ds	2
  1563     00A4                     _EUSART_FramingErrorHandler:
  1564     00A4                     	ds	2
  1565     00A6                     _dbuf:
  1566     00A6                     	ds	32
  1567     00C6                     _DISPLAY_T:
  1568     00C6                     	ds	3
  1569     00C9                     _DISPLAY_W:
  1570     00C9                     	ds	3
  1571                           
  1572                           	psect	dataBANK1
  1573     00CC                     __pdataBANK1:
  1574     00CC                     _DISPLAY_DATA:
  1575     00CC                     	ds	10
  1576                           
  1577                           	psect	inittext
  1578     03FD                     init_ram:
  1579     03FD  00FE               	movwf	btemp
  1580     03FE                     initloop:
  1581     03FE  0012               	moviw fsr0++
  1582     03FF  001E               	movwi fsr1++
  1583     0400  0BFE               	decfsz	btemp,f
  1584     0401  2BFE               	goto	initloop
  1585     0402  3400               	retlw	0
  1586                           
  1587                           	psect	clrtext
  1588     0403                     clear_ram0:	
  1589                           ;	Called with FSR0 containing the base address, and
  1590                           ;	WREG with the size to clear
  1591                           
  1592     0403  0064               	clrwdt	;clear the watchdog before getting into this loop
  1593     0404                     clrloop0:
  1594     0404  0180               	clrf	0	;clear RAM location pointed to by FSR
  1595     0405  3101               	addfsr 0,1
  1596     0406  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1597     0407  2C04               	goto	clrloop0	;have we reached the end yet?
  1598     0408  3400               	retlw	0	;all done for this memory range, return
  1599                           
  1600                           	psect	cstackCOMMON
  1601     0070                     __pcstackCOMMON:
  1602     0070                     ?_SPI1_Initialize:
  1603     0070                     ?_PIN_MANAGER_Initialize:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0070                     ?_OSCILLATOR_Initialize:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0070                     ?_WDT_Initialize:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612     0070                     ?_TMR1_Initialize:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0070                     ?_EUSART_Initialize:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0070                     ?_TMR1_ISR:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0070                     ?_TMR1_DefaultInterruptHandler:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0070                     ??_TMR1_DefaultInterruptHandler:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0070                     ?_TMR1_CallBack:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0070                     ?_memcpy:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0070                     ?_SPI1_ExchangeBlock:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636     0070                     ?_SYSTEM_Initialize:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0070                     ?_INTERRUPT_InterruptManager:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0070                     ?_TMR1_WriteTimer:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0070                     ?_EUSART_Write:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0070                     ?_putch:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0070                     ?_loop:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654     0070                     ?_main:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657     0070                     memcpy@s1:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660     0070                     TMR1_WriteTimer@timerVal:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0070                     SPI1_ExchangeBlock@blockSize:	
  1664                           ; 2 bytes @ 0x0
  1665                           
  1666                           
  1667                           ; 2 bytes @ 0x0
  1668     0070                     	ds	1
  1669     0071                     memcpy@n:
  1670                           
  1671                           ; 2 bytes @ 0x1
  1672     0071                     	ds	1
  1673     0072                     ??_SPI1_ExchangeBlock:
  1674     0072                     ??_TMR1_WriteTimer:	
  1675                           ; 1 bytes @ 0x2
  1676                           
  1677                           
  1678                           ; 1 bytes @ 0x2
  1679     0072                     	ds	1
  1680     0073                     ??_memcpy:
  1681     0073                     SPI1_ExchangeBlock@block:	
  1682                           ; 1 bytes @ 0x3
  1683                           
  1684                           
  1685                           ; 1 bytes @ 0x3
  1686     0073                     	ds	1
  1687     0074                     SPI1_ExchangeBlock@data:
  1688     0074                     memcpy@tmp:	
  1689                           ; 1 bytes @ 0x4
  1690                           
  1691                           
  1692                           ; 1 bytes @ 0x4
  1693     0074                     	ds	1
  1694     0075                     memcpy@d1:
  1695                           
  1696                           ; 1 bytes @ 0x5
  1697     0075                     	ds	1
  1698     0076                     memcpy@d:
  1699                           
  1700                           ; 1 bytes @ 0x6
  1701     0076                     	ds	1
  1702     0077                     memcpy@s:
  1703                           
  1704                           ; 1 bytes @ 0x7
  1705     0077                     	ds	1
  1706     0078                     ??_TMR1_ISR:
  1707     0078                     ??_TMR1_CallBack:	
  1708                           ; 1 bytes @ 0x8
  1709                           
  1710     0078                     ??_INTERRUPT_InterruptManager:	
  1711                           ; 1 bytes @ 0x8
  1712                           
  1713     0078                     ??_loop:	
  1714                           ; 1 bytes @ 0x8
  1715                           
  1716                           
  1717                           	psect	cstackBANK0
  1718     0020                     __pcstackBANK0:	
  1719                           ; 1 bytes @ 0x8
  1720                           
  1721     0020                     ??_SPI1_Initialize:
  1722     0020                     ??_PIN_MANAGER_Initialize:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725     0020                     ??_OSCILLATOR_Initialize:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728     0020                     ??_WDT_Initialize:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731     0020                     ?_TMR1_SetInterruptHandler:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734     0020                     ?_EUSART_SetFramingErrorHandler:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737     0020                     ?_EUSART_SetOverrunErrorHandler:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740     0020                     ?_EUSART_SetErrorHandler:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743     0020                     ??_EUSART_Write:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746     0020                     EUSART_Write@txData:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749     0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1753                           ; 2 bytes @ 0x0
  1754                           
  1755     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1756                           ; 2 bytes @ 0x0
  1757                           
  1758     0020                     EUSART_SetErrorHandler@interruptHandler:	
  1759                           ; 2 bytes @ 0x0
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x0
  1763     0020                     	ds	1
  1764     0021                     ??_putch:
  1765     0021                     putch@txData:	
  1766                           ; 1 bytes @ 0x1
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0x1
  1770     0021                     	ds	1
  1771     0022                     ??_TMR1_Initialize:
  1772     0022                     ??_EUSART_Initialize:	
  1773                           ; 1 bytes @ 0x2
  1774                           
  1775     0022                     ??_TMR1_SetInterruptHandler:	
  1776                           ; 1 bytes @ 0x2
  1777                           
  1778     0022                     ??_EUSART_SetFramingErrorHandler:	
  1779                           ; 1 bytes @ 0x2
  1780                           
  1781     0022                     ??_EUSART_SetOverrunErrorHandler:	
  1782                           ; 1 bytes @ 0x2
  1783                           
  1784     0022                     ??_EUSART_SetErrorHandler:	
  1785                           ; 1 bytes @ 0x2
  1786                           
  1787     0022                     ??_SYSTEM_Initialize:	
  1788                           ; 1 bytes @ 0x2
  1789                           
  1790     0022                     ?_fputc:	
  1791                           ; 1 bytes @ 0x2
  1792                           
  1793     0022                     fputc@c:	
  1794                           ; 2 bytes @ 0x2
  1795                           
  1796                           
  1797                           ; 2 bytes @ 0x2
  1798     0022                     	ds	2
  1799     0024                     fputc@fp:
  1800                           
  1801                           ; 2 bytes @ 0x4
  1802     0024                     	ds	2
  1803     0026                     ??_fputc:
  1804                           
  1805                           ; 1 bytes @ 0x6
  1806     0026                     	ds	5
  1807     002B                     ?_fputs:
  1808     002B                     fputs@fp:	
  1809                           ; 2 bytes @ 0xB
  1810                           
  1811                           
  1812                           ; 2 bytes @ 0xB
  1813     002B                     	ds	2
  1814     002D                     ??_fputs:
  1815                           
  1816                           ; 1 bytes @ 0xD
  1817     002D                     	ds	2
  1818     002F                     fputs@c:
  1819                           
  1820                           ; 1 bytes @ 0xF
  1821     002F                     	ds	1
  1822     0030                     fputs@i:
  1823                           
  1824                           ; 2 bytes @ 0x10
  1825     0030                     	ds	2
  1826     0032                     fputs@s:
  1827                           
  1828                           ; 1 bytes @ 0x12
  1829     0032                     	ds	1
  1830     0033                     ?_pad:
  1831     0033                     pad@fp:	
  1832                           ; 1 bytes @ 0x13
  1833                           
  1834                           
  1835                           ; 2 bytes @ 0x13
  1836     0033                     	ds	2
  1837     0035                     pad@buf:
  1838                           
  1839                           ; 1 bytes @ 0x15
  1840     0035                     	ds	1
  1841     0036                     pad@p:
  1842                           
  1843                           ; 2 bytes @ 0x16
  1844     0036                     	ds	2
  1845     0038                     ??_pad:
  1846                           
  1847                           ; 1 bytes @ 0x18
  1848     0038                     	ds	1
  1849     0039                     pad@i:
  1850                           
  1851                           ; 2 bytes @ 0x19
  1852     0039                     	ds	2
  1853     003B                     pad@w:
  1854                           
  1855                           ; 2 bytes @ 0x1B
  1856     003B                     	ds	2
  1857     003D                     ?_xtoa:
  1858     003D                     xtoa@fp:	
  1859                           ; 1 bytes @ 0x1D
  1860                           
  1861                           
  1862                           ; 2 bytes @ 0x1D
  1863     003D                     	ds	2
  1864     003F                     xtoa@d:
  1865                           
  1866                           ; 2 bytes @ 0x1F
  1867     003F                     	ds	2
  1868     0041                     ??_xtoa:
  1869                           
  1870                           ; 1 bytes @ 0x21
  1871     0041                     	ds	1
  1872     0042                     xtoa@w:
  1873                           
  1874                           ; 2 bytes @ 0x22
  1875     0042                     	ds	2
  1876     0044                     _xtoa$1217:
  1877                           
  1878                           ; 2 bytes @ 0x24
  1879     0044                     	ds	2
  1880     0046                     xtoa@p:
  1881                           
  1882                           ; 2 bytes @ 0x26
  1883     0046                     	ds	2
  1884     0048                     xtoa@i:
  1885                           
  1886                           ; 2 bytes @ 0x28
  1887     0048                     	ds	2
  1888     004A                     xtoa@c:
  1889                           
  1890                           ; 1 bytes @ 0x2A
  1891     004A                     	ds	1
  1892     004B                     ?_vfpfcnvrt:
  1893     004B                     vfpfcnvrt@fp:	
  1894                           ; 1 bytes @ 0x2B
  1895                           
  1896                           
  1897                           ; 2 bytes @ 0x2B
  1898     004B                     	ds	2
  1899     004D                     vfpfcnvrt@fmt:
  1900                           
  1901                           ; 1 bytes @ 0x2D
  1902     004D                     	ds	1
  1903     004E                     vfpfcnvrt@ap:
  1904                           
  1905                           ; 1 bytes @ 0x2E
  1906     004E                     	ds	1
  1907     004F                     ??_vfpfcnvrt:
  1908                           
  1909                           ; 1 bytes @ 0x2F
  1910     004F                     	ds	4
  1911     0053                     vfpfcnvrt@convarg:
  1912                           
  1913                           ; 4 bytes @ 0x33
  1914     0053                     	ds	4
  1915     0057                     vfpfcnvrt@cp:
  1916                           
  1917                           ; 2 bytes @ 0x37
  1918     0057                     	ds	2
  1919     0059                     ?_vfprintf:
  1920     0059                     vfprintf@fp:	
  1921                           ; 2 bytes @ 0x39
  1922                           
  1923                           
  1924                           ; 2 bytes @ 0x39
  1925     0059                     	ds	2
  1926     005B                     vfprintf@fmt:
  1927                           
  1928                           ; 2 bytes @ 0x3B
  1929     005B                     	ds	2
  1930     005D                     vfprintf@ap:
  1931                           
  1932                           ; 1 bytes @ 0x3D
  1933     005D                     	ds	1
  1934     005E                     ??_vfprintf:
  1935                           
  1936                           ; 1 bytes @ 0x3E
  1937     005E                     	ds	1
  1938     005F                     vfprintf@cfmt:
  1939                           
  1940                           ; 2 bytes @ 0x3F
  1941     005F                     	ds	2
  1942     0061                     ?_printf:
  1943     0061                     printf@fmt:	
  1944                           ; 2 bytes @ 0x41
  1945                           
  1946                           
  1947                           ; 2 bytes @ 0x41
  1948     0061                     	ds	4
  1949     0065                     ??_printf:
  1950     0065                     printf@ap:	
  1951                           ; 1 bytes @ 0x45
  1952                           
  1953                           
  1954                           ; 1 bytes @ 0x45
  1955     0065                     	ds	1
  1956     0066                     ?_display_data:
  1957     0066                     display_data@NUMBER:	
  1958                           ; 1 bytes @ 0x46
  1959                           
  1960                           
  1961                           ; 1 bytes @ 0x46
  1962     0066                     	ds	1
  1963     0067                     ??_display_data:
  1964                           
  1965                           ; 1 bytes @ 0x47
  1966     0067                     	ds	2
  1967     0069                     display_data@tmp:
  1968                           
  1969                           ; 1 bytes @ 0x49
  1970     0069                     	ds	1
  1971     006A                     display_data@SEGMENT:
  1972                           
  1973                           ; 1 bytes @ 0x4A
  1974     006A                     	ds	1
  1975     006B                     ??_main:
  1976                           
  1977                           	psect	maintext
  1978     033F                     __pmaintext:	
  1979                           ; 1 bytes @ 0x4B
  1980 ;;
  1981 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1982 ;;
  1983 ;; *************** function _main *****************
  1984 ;; Defined at:
  1985 ;;		line 45 in file "main.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : B1F/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels required when called: 15
  2005 ;; This function calls:
  2006 ;;		_SYSTEM_Initialize
  2007 ;;		_TMR1_SetInterruptHandler
  2008 ;;		_display_data
  2009 ;; This function is called by:
  2010 ;;		Startup code after reset
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014     033F                     _main:	
  2015                           ;psect for function _main
  2016                           
  2017     033F                     l1755:	
  2018                           ;incstack = 0
  2019                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2020                           
  2021                           
  2022                           ;main.c: 47:     SYSTEM_Initialize();
  2023     033F  3183  2356  3183   	fcall	_SYSTEM_Initialize
  2024     0342                     l1757:
  2025                           
  2026                           ;main.c: 49:     (INTCONbits.GIE = 1);
  2027     0342  178B               	bsf	11,7	;volatile
  2028     0343                     l1759:
  2029                           
  2030                           ;main.c: 50:     (INTCONbits.PEIE = 1);
  2031     0343  170B               	bsf	11,6	;volatile
  2032                           
  2033                           ;main.c: 52:     TMR1_SetInterruptHandler(loop);
  2034     0344  30C8               	movlw	low _loop
  2035     0345  0020               	movlb	0	; select bank0
  2036     0346  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2037     0347  3002               	movlw	high _loop
  2038     0348  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2039     0349  3184  2409  3183   	fcall	_TMR1_SetInterruptHandler
  2040     034C                     l1761:
  2041                           
  2042                           ;main.c: 55:     {;main.c: 56:         display_data(11, 3);
  2043     034C  3003               	movlw	3
  2044     034D  0020               	movlb	0	; select bank0
  2045     034E  00E6               	movwf	display_data@NUMBER
  2046     034F  300B               	movlw	11
  2047     0350  3181  21AF  3183   	fcall	_display_data
  2048     0353  2B4C               	goto	l1761
  2049     0354  3180  2819         	ljmp	start
  2050     0356                     __end_of_main:
  2051                           
  2052                           	psect	text1
  2053     01AF                     __ptext1:	
  2054 ;; *************** function _display_data *****************
  2055 ;; Defined at:
  2056 ;;		line 18 in file "main.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  SEGMENT         1    wreg     unsigned char 
  2059 ;;  NUMBER          1   70[BANK0 ] unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  SEGMENT         1   74[BANK0 ] unsigned char 
  2062 ;;  tmp             1   73[BANK0 ] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      unsigned char 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2072 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2076 ;;Total ram usage:        5 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 14
  2079 ;; This function calls:
  2080 ;;		_printf
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086     01AF                     _display_data:	
  2087                           ;psect for function _display_data
  2088                           
  2089                           
  2090                           ;incstack = 0
  2091                           ; Regs used in _display_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2092                           ;display_data@SEGMENT stored from wreg
  2093     01AF  0020               	movlb	0	; select bank0
  2094     01B0  00EA               	movwf	display_data@SEGMENT
  2095     01B1                     l1723:
  2096                           
  2097                           ;main.c: 18: uint8_t display_data(uint8_t SEGMENT, uint8_t NUMBER);main.c: 19: {;main.c:
      +                           20:     if(SEGMENT <= 7)
  2098     01B1  3008               	movlw	8
  2099     01B2  026A               	subwf	display_data@SEGMENT,w
  2100     01B3  1803               	skipnc
  2101     01B4  29B6               	goto	u651
  2102     01B5  29B7               	goto	u650
  2103     01B6                     u651:
  2104     01B6  29C8               	goto	l1727
  2105     01B7                     u650:
  2106     01B7                     l1725:
  2107                           
  2108                           ;main.c: 21:     {;main.c: 22:         DISPLAY_W[1] = 0x01 << SEGMENT;
  2109     01B7  3001               	movlw	1
  2110     01B8  00E7               	movwf	??_display_data
  2111     01B9  0A6A               	incf	display_data@SEGMENT,w
  2112     01BA  29BC               	goto	u664
  2113     01BB                     u665:
  2114     01BB  35E7               	lslf	??_display_data,f
  2115     01BC                     u664:
  2116     01BC  0B89               	decfsz	9,f
  2117     01BD  29BB               	goto	u665
  2118     01BE  0867               	movf	??_display_data,w
  2119     01BF  0021               	movlb	1	; select bank1
  2120     01C0  00CA               	movwf	(_DISPLAY_W^(0+128)+1)
  2121                           
  2122                           ;main.c: 23:         DISPLAY_W[0] &= 0xF0;
  2123     01C1  30F0               	movlw	240
  2124     01C2  0020               	movlb	0	; select bank0
  2125     01C3  00E7               	movwf	??_display_data
  2126     01C4  0867               	movf	??_display_data,w
  2127     01C5  0021               	movlb	1	; select bank1
  2128     01C6  05C9               	andwf	_DISPLAY_W^(0+128),f
  2129                           
  2130                           ;main.c: 24:     }
  2131     01C7  29EF               	goto	l1737
  2132     01C8                     l1727:
  2133                           
  2134                           ;main.c: 26:     {;main.c: 27:         DISPLAY_W[1] = 0x00;
  2135     01C8  0021               	movlb	1	; select bank1
  2136     01C9  01CA               	clrf	(_DISPLAY_W^(0+128)+1)
  2137     01CA                     l1729:
  2138                           
  2139                           ;main.c: 28:         uint8_t tmp = DISPLAY_W[0] & 0xF0;
  2140     01CA  0849               	movf	_DISPLAY_W^(0+128),w
  2141     01CB  39F0               	andlw	240
  2142     01CC  0020               	movlb	0	; select bank0
  2143     01CD  00E9               	movwf	display_data@tmp
  2144     01CE                     l1731:
  2145                           
  2146                           ;main.c: 29:         printf("temp %x", tmp);
  2147     01CE  309B               	movlw	low (STR_1| (0+32768))
  2148     01CF  00E1               	movwf	printf@fmt
  2149     01D0  3083               	movlw	high (STR_1| (0+32768))
  2150     01D1  00E2               	movwf	printf@fmt+1
  2151     01D2  0869               	movf	display_data@tmp,w
  2152     01D3  00E7               	movwf	??_display_data
  2153     01D4  01E8               	clrf	??_display_data+1
  2154     01D5  0867               	movf	??_display_data,w
  2155     01D6  00E3               	movwf	?_printf+2
  2156     01D7  0868               	movf	??_display_data+1,w
  2157     01D8  00E4               	movwf	?_printf+3
  2158     01D9  3183  237A  3181   	fcall	_printf
  2159     01DC                     l1733:
  2160                           
  2161                           ;main.c: 30:         DISPLAY_W[0] = 0x01 << (SEGMENT - 8);
  2162     01DC  3001               	movlw	1
  2163     01DD  0020               	movlb	0	; select bank0
  2164     01DE  00E7               	movwf	??_display_data
  2165     01DF  086A               	movf	display_data@SEGMENT,w
  2166     01E0  3EF8               	addlw	-8
  2167     01E1  0A89               	incf	9,f
  2168     01E2  29E4               	goto	u674
  2169     01E3                     u675:
  2170     01E3  35E7               	lslf	??_display_data,f
  2171     01E4                     u674:
  2172     01E4  0B89               	decfsz	9,f
  2173     01E5  29E3               	goto	u675
  2174     01E6  0867               	movf	??_display_data,w
  2175     01E7  0021               	movlb	1	; select bank1
  2176     01E8  00C9               	movwf	_DISPLAY_W^(0+128)
  2177     01E9                     l1735:
  2178                           
  2179                           ;main.c: 31:         DISPLAY_W[0] |= tmp;
  2180     01E9  0020               	movlb	0	; select bank0
  2181     01EA  0869               	movf	display_data@tmp,w
  2182     01EB  00E7               	movwf	??_display_data
  2183     01EC  0867               	movf	??_display_data,w
  2184     01ED  0021               	movlb	1	; select bank1
  2185     01EE  04C9               	iorwf	_DISPLAY_W^(0+128),f
  2186     01EF                     l1737:
  2187                           
  2188                           ;main.c: 34:     DISPLAY_W[2] = DISPLAY_DATA[NUMBER];
  2189     01EF  0020               	movlb	0	; select bank0
  2190     01F0  0866               	movf	display_data@NUMBER,w
  2191     01F1  3ECC               	addlw	(low (_DISPLAY_DATA| 0))& (0+255)
  2192     01F2  0086               	movwf	6
  2193     01F3  0187               	clrf	7
  2194     01F4  0801               	movf	1,w
  2195     01F5  0021               	movlb	1	; select bank1
  2196     01F6  00CB               	movwf	(_DISPLAY_W^(0+128)+2)
  2197     01F7                     l280:
  2198     01F7  0008               	return
  2199     01F8                     __end_of_display_data:
  2200                           
  2201                           	psect	text2
  2202     037A                     __ptext2:	
  2203 ;; *************** function _printf *****************
  2204 ;; Defined at:
  2205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  2208 ;;		 -> STR_1(8), 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  ret             2    0        int 
  2211 ;;  ap              1   69[BANK0 ] PTR void [1]
  2212 ;;		 -> ?_printf(2), 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2   65[BANK0 ] int 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2225 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2226 ;;Total ram usage:        5 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 13
  2229 ;; This function calls:
  2230 ;;		_vfprintf
  2231 ;; This function is called by:
  2232 ;;		_display_data
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236     037A                     _printf:	
  2237                           ;psect for function _printf
  2238                           
  2239     037A                     l1697:	
  2240                           ;incstack = 0
  2241                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2242                           
  2243     037A  3063               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2244     037B  0020               	movlb	0	; select bank0
  2245     037C  00E5               	movwf	printf@ap
  2246     037D                     l1699:
  2247     037D  3000               	movlw	0
  2248     037E  00D9               	movwf	vfprintf@fp
  2249     037F  00DA               	movwf	vfprintf@fp+1
  2250     0380  0862               	movf	printf@fmt+1,w
  2251     0381  00DC               	movwf	vfprintf@fmt+1
  2252     0382  0861               	movf	printf@fmt,w
  2253     0383  00DB               	movwf	vfprintf@fmt
  2254     0384  3065               	movlw	(low (printf@ap| 0))& (0+255)
  2255     0385  00DD               	movwf	vfprintf@ap
  2256     0386  3182  22EB  3183   	fcall	_vfprintf
  2257     0389                     l971:
  2258     0389  0008               	return
  2259     038A                     __end_of_printf:
  2260                           
  2261                           	psect	text3
  2262     02EB                     __ptext3:	
  2263 ;; *************** function _vfprintf *****************
  2264 ;; Defined at:
  2265 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  2268 ;;		 -> NULL(0), 
  2269 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  2270 ;;		 -> STR_1(8), 
  2271 ;;  ap              1   61[BANK0 ] PTR PTR void 
  2272 ;;		 -> printf@ap(1), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  cfmt            2   63[BANK0 ] PTR unsigned char 
  2275 ;;		 -> STR_1(8), 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2   57[BANK0 ] int 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2285 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;Total ram usage:        8 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 12
  2292 ;; This function calls:
  2293 ;;		_vfpfcnvrt
  2294 ;; This function is called by:
  2295 ;;		_printf
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299     02EB                     _vfprintf:	
  2300                           ;psect for function _vfprintf
  2301                           
  2302     02EB                     l1609:	
  2303                           ;incstack = 0
  2304                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2305                           
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2308     02EB  0020               	movlb	0	; select bank0
  2309     02EC  085C               	movf	vfprintf@fmt+1,w
  2310     02ED  00E0               	movwf	vfprintf@cfmt+1
  2311     02EE  085B               	movf	vfprintf@fmt,w
  2312     02EF  00DF               	movwf	vfprintf@cfmt
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2315     02F0  2AFC               	goto	l1613
  2316     02F1                     l1611:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2319     02F1  085A               	movf	vfprintf@fp+1,w
  2320     02F2  00CC               	movwf	vfpfcnvrt@fp+1
  2321     02F3  0859               	movf	vfprintf@fp,w
  2322     02F4  00CB               	movwf	vfpfcnvrt@fp
  2323     02F5  305F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2324     02F6  00CD               	movwf	vfpfcnvrt@fmt
  2325     02F7  085D               	movf	vfprintf@ap,w
  2326     02F8  00CE               	movwf	vfpfcnvrt@ap
  2327     02F9  3180  203D  3182   	fcall	_vfpfcnvrt
  2328     02FC                     l1613:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2331     02FC  0020               	movlb	0	; select bank0
  2332     02FD  085F               	movf	vfprintf@cfmt,w
  2333     02FE  0084               	movwf	4
  2334     02FF  0860               	movf	vfprintf@cfmt+1,w
  2335     0300  0085               	movwf	5
  2336     0301  0012               	moviw fsr0++
  2337     0302  1D03               	btfss	3,2
  2338     0303  2B05               	goto	u591
  2339     0304  2B06               	goto	u590
  2340     0305                     u591:
  2341     0305  2AF1               	goto	l1611
  2342     0306                     u590:
  2343     0306                     l1615:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2346     0306  01D9               	clrf	?_vfprintf
  2347     0307  01DA               	clrf	?_vfprintf+1
  2348     0308                     l1027:
  2349     0308  0008               	return
  2350     0309                     __end_of_vfprintf:
  2351                           
  2352                           	psect	text4
  2353     003D                     __ptext4:	
  2354 ;; *************** function _vfpfcnvrt *****************
  2355 ;; Defined at:
  2356 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  fp              2   43[BANK0 ] PTR struct _IO_FILE
  2359 ;;		 -> NULL(0), 
  2360 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  2361 ;;		 -> vfprintf@cfmt(2), 
  2362 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2363 ;;		 -> printf@ap(1), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  convarg         4   51[BANK0 ] struct .
  2366 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  2367 ;;		 -> STR_1(8), 
  2368 ;;  i               2    0        int 
  2369 ;;  done            2    0        int 
  2370 ;;  c               1    0        unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;Total ram usage:       14 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 11
  2387 ;; This function calls:
  2388 ;;		_fputc
  2389 ;;		_xtoa
  2390 ;; This function is called by:
  2391 ;;		_vfprintf
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395     003D                     _vfpfcnvrt:	
  2396                           ;psect for function _vfpfcnvrt
  2397                           
  2398     003D                     l1553:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2401                           
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2404     003D  0020               	movlb	0	; select bank0
  2405     003E  084D               	movf	vfpfcnvrt@fmt,w
  2406     003F  0086               	movwf	6
  2407     0040  0187               	clrf	7
  2408     0041  3F40               	moviw [0]fsr1
  2409     0042  00CF               	movwf	??_vfpfcnvrt
  2410     0043  3F41               	moviw [1]fsr1
  2411     0044  00D0               	movwf	??_vfpfcnvrt+1
  2412     0045  084F               	movf	??_vfpfcnvrt,w
  2413     0046  0084               	movwf	4
  2414     0047  0850               	movf	??_vfpfcnvrt+1,w
  2415     0048  0085               	movwf	5
  2416     0049  0012               	moviw fsr0++
  2417     004A  3A25               	xorlw	37
  2418     004B  1D03               	btfss	3,2
  2419     004C  284E               	goto	u551
  2420     004D  284F               	goto	u550
  2421     004E                     u551:
  2422     004E  28B4               	goto	l1581
  2423     004F                     u550:
  2424     004F                     l1555:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2427     004F  084D               	movf	vfpfcnvrt@fmt,w
  2428     0050  0086               	movwf	6
  2429     0051  0187               	clrf	7
  2430     0052  3001               	movlw	1
  2431     0053  0781               	addwf	1,f
  2432     0054  3141               	addfsr 1,1
  2433     0055  1803               	skipnc
  2434     0056  0A81               	incf	1,f
  2435     0057                     l1557:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2438     0057  01F8               	clrf	_width
  2439     0058  01F9               	clrf	_width+1
  2440     0059  1003               	clrc
  2441     005A  3000               	movlw	0
  2442     005B  1803               	btfsc	3,0
  2443     005C  3001               	movlw	1
  2444     005D  00ED               	movwf	_flags
  2445     005E                     l1559:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2448     005E  30FF               	movlw	255
  2449     005F  00EB               	movwf	_prec
  2450     0060  30FF               	movlw	255
  2451     0061  00EC               	movwf	_prec+1
  2452     0062                     l1561:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
  2455     0062  084D               	movf	vfpfcnvrt@fmt,w
  2456     0063  0086               	movwf	6
  2457     0064  0187               	clrf	7
  2458     0065  3F40               	moviw [0]fsr1
  2459     0066  00D7               	movwf	vfpfcnvrt@cp
  2460     0067  3F41               	moviw [1]fsr1
  2461     0068  00D8               	movwf	vfpfcnvrt@cp+1
  2462     0069                     l1563:
  2463     0069  0857               	movf	vfpfcnvrt@cp,w
  2464     006A  0084               	movwf	4
  2465     006B  0858               	movf	vfpfcnvrt@cp+1,w
  2466     006C  0085               	movwf	5
  2467     006D  0012               	moviw fsr0++
  2468     006E  3A78               	xorlw	120
  2469     006F  1D03               	btfss	3,2
  2470     0070  2872               	goto	u561
  2471     0071  2873               	goto	u560
  2472     0072                     u561:
  2473     0072  28AA               	goto	l1577
  2474     0073                     u560:
  2475     0073                     l1565:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2478     0073  084E               	movf	vfpfcnvrt@ap,w
  2479     0074  0086               	movwf	6
  2480     0075  0187               	clrf	7
  2481     0076  0801               	movf	1,w
  2482     0077  0084               	movwf	4
  2483     0078  0185               	clrf	5
  2484     0079  3002               	movlw	2
  2485     007A  0781               	addwf	1,f
  2486     007B  3F00               	moviw [0]fsr0
  2487     007C  00D3               	movwf	vfpfcnvrt@convarg
  2488     007D  3F01               	moviw [1]fsr0
  2489     007E  00D4               	movwf	vfpfcnvrt@convarg+1
  2490     007F                     l1567:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  2493     007F  0857               	movf	vfpfcnvrt@cp,w
  2494     0080  3E01               	addlw	1
  2495     0081  00CF               	movwf	??_vfpfcnvrt
  2496     0082  3000               	movlw	0
  2497     0083  3D58               	addwfc	vfpfcnvrt@cp+1,w
  2498     0084  00D0               	movwf	??_vfpfcnvrt+1
  2499     0085  084D               	movf	vfpfcnvrt@fmt,w
  2500     0086  0086               	movwf	6
  2501     0087  0187               	clrf	7
  2502     0088  084F               	movf	??_vfpfcnvrt,w
  2503     0089  3FC0               	movwi [0]fsr1
  2504     008A  0850               	movf	??_vfpfcnvrt+1,w
  2505     008B  3FC1               	movwi [1]fsr1
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  2508     008C  2899               	goto	l1575
  2509     008D                     l1569:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1340:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  2512     008D  084C               	movf	vfpfcnvrt@fp+1,w
  2513     008E  00BE               	movwf	xtoa@fp+1
  2514     008F  084B               	movf	vfpfcnvrt@fp,w
  2515     0090  00BD               	movwf	xtoa@fp
  2516     0091  0854               	movf	vfpfcnvrt@convarg+1,w
  2517     0092  00C0               	movwf	xtoa@d+1
  2518     0093  0853               	movf	vfpfcnvrt@convarg,w
  2519     0094  00BF               	movwf	xtoa@d
  2520     0095  3180  20CF  3180   	fcall	_xtoa
  2521     0098  28CE               	goto	l1020
  2522     0099                     l1575:
  2523     0099  0857               	movf	vfpfcnvrt@cp,w
  2524     009A  0084               	movwf	4
  2525     009B  0858               	movf	vfpfcnvrt@cp+1,w
  2526     009C  0085               	movwf	5
  2527     009D  0800               	movf	0,w	;code access
  2528     009E  00CF               	movwf	??_vfpfcnvrt
  2529     009F  01D0               	clrf	??_vfpfcnvrt+1
  2530                           
  2531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2532                           ; Switch size 1, requested type "simple"
  2533                           ; Number of cases is 1, Range of values is 0 to 0
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte            4     3 (average)
  2537                           ; direct_byte            8     6 (fixed)
  2538                           ; jumptable            260     6 (fixed)
  2539                           ;	Chosen strategy is simple_byte
  2540     00A0  0850               	movf	??_vfpfcnvrt+1,w
  2541     00A1  3A00               	xorlw	0	; case 0
  2542     00A2  1903               	skipnz
  2543     00A3  28A5               	goto	l1783
  2544     00A4  28AA               	goto	l1577
  2545     00A5                     l1783:
  2546                           
  2547                           ; Switch size 1, requested type "simple"
  2548                           ; Number of cases is 1, Range of values is 120 to 120
  2549                           ; switch strategies available:
  2550                           ; Name         Instructions Cycles
  2551                           ; simple_byte            4     3 (average)
  2552                           ; direct_byte           11     9 (fixed)
  2553                           ; jumptable            263     9 (fixed)
  2554                           ;	Chosen strategy is simple_byte
  2555     00A5  084F               	movf	??_vfpfcnvrt,w
  2556     00A6  3A78               	xorlw	120	; case 120
  2557     00A7  1903               	skipnz
  2558     00A8  288D               	goto	l1569
  2559     00A9  28AA               	goto	l1577
  2560     00AA                     l1577:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2563     00AA  0020               	movlb	0	; select bank0
  2564     00AB  084D               	movf	vfpfcnvrt@fmt,w
  2565     00AC  0086               	movwf	6
  2566     00AD  0187               	clrf	7
  2567     00AE  3001               	movlw	1
  2568     00AF  0781               	addwf	1,f
  2569     00B0  3141               	addfsr 1,1
  2570     00B1  1803               	skipnc
  2571     00B2  0A81               	incf	1,f
  2572     00B3  28CE               	goto	l1020
  2573     00B4                     l1581:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2576     00B4  084D               	movf	vfpfcnvrt@fmt,w
  2577     00B5  0086               	movwf	6
  2578     00B6  0187               	clrf	7
  2579     00B7  3F40               	moviw [0]fsr1
  2580     00B8  00CF               	movwf	??_vfpfcnvrt
  2581     00B9  3F41               	moviw [1]fsr1
  2582     00BA  00D0               	movwf	??_vfpfcnvrt+1
  2583     00BB  084F               	movf	??_vfpfcnvrt,w
  2584     00BC  0084               	movwf	4
  2585     00BD  0850               	movf	??_vfpfcnvrt+1,w
  2586     00BE  0085               	movwf	5
  2587     00BF  0800               	movf	0,w	;code access
  2588     00C0  00D1               	movwf	??_vfpfcnvrt+2
  2589     00C1  01D2               	clrf	??_vfpfcnvrt+3
  2590     00C2  0851               	movf	??_vfpfcnvrt+2,w
  2591     00C3  00A2               	movwf	fputc@c
  2592     00C4  0852               	movf	??_vfpfcnvrt+3,w
  2593     00C5  00A3               	movwf	fputc@c+1
  2594     00C6  084C               	movf	vfpfcnvrt@fp+1,w
  2595     00C7  00A5               	movwf	fputc@fp+1
  2596     00C8  084B               	movf	vfpfcnvrt@fp,w
  2597     00C9  00A4               	movwf	fputc@fp
  2598     00CA  3181  2150  3180   	fcall	_fputc
  2599     00CD  28AA               	goto	l1577
  2600     00CE                     l1020:
  2601     00CE  0008               	return
  2602     00CF                     __end_of_vfpfcnvrt:
  2603                           
  2604                           	psect	text5
  2605     00CF                     __ptext5:	
  2606 ;; *************** function _xtoa *****************
  2607 ;; Defined at:
  2608 ;;		line 955 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  2611 ;;		 -> NULL(0), 
  2612 ;;  d               2   31[BANK0 ] unsigned int 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  i               2   40[BANK0 ] int 
  2615 ;;  p               2   38[BANK0 ] int 
  2616 ;;  w               2   34[BANK0 ] int 
  2617 ;;  c               1   42[BANK0 ] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;Total ram usage:       14 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 10
  2634 ;; This function calls:
  2635 ;;		_pad
  2636 ;; This function is called by:
  2637 ;;		_vfpfcnvrt
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641     00CF                     _xtoa:	
  2642                           ;psect for function _xtoa
  2643                           
  2644     00CF                     l1499:	
  2645                           ;incstack = 0
  2646                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2647                           
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 955: static void 
      +                          xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 958: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           959:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 960
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           971:     p = (0 <= prec) ? prec : 1;
  2650     00CF  0020               	movlb	0	; select bank0
  2651     00D0  1FEC               	btfss	_prec+1,7
  2652     00D1  28D3               	goto	u471
  2653     00D2  28D4               	goto	u470
  2654     00D3                     u471:
  2655     00D3  28D9               	goto	l1503
  2656     00D4                     u470:
  2657     00D4                     l1501:
  2658     00D4  3001               	movlw	1
  2659     00D5  00C6               	movwf	xtoa@p
  2660     00D6  3000               	movlw	0
  2661     00D7  00C7               	movwf	xtoa@p+1
  2662     00D8  28DD               	goto	l1001
  2663     00D9                     l1503:
  2664     00D9  086C               	movf	_prec+1,w
  2665     00DA  00C7               	movwf	xtoa@p+1
  2666     00DB  086B               	movf	_prec,w
  2667     00DC  00C6               	movwf	xtoa@p
  2668     00DD                     l1001:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 972:     w = widt
      +                          h;
  2671     00DD  0879               	movf	_width+1,w
  2672     00DE  00C3               	movwf	xtoa@w+1
  2673     00DF  0878               	movf	_width,w
  2674     00E0  00C2               	movwf	xtoa@w
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 981:     i = size
      +                          of(dbuf) - 1;
  2677     00E1  301F               	movlw	31
  2678     00E2  00C8               	movwf	xtoa@i
  2679     00E3  3000               	movlw	0
  2680     00E4  00C9               	movwf	xtoa@i+1
  2681     00E5                     l1505:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 982:     dbuf[i] 
      +                          = '\0';
  2684     00E5  0021               	movlb	1	; select bank1
  2685     00E6  01C5               	clrf	(_dbuf^(0+128)+31)
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  2688     00E7  291E               	goto	l1525
  2689     00E8                     l1507:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 987:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 988:         --i;
  2692     00E8  30FF               	movlw	255
  2693     00E9  0020               	movlb	0	; select bank0
  2694     00EA  07C8               	addwf	xtoa@i,f
  2695     00EB  30FF               	movlw	255
  2696     00EC  3DC9               	addwfc	xtoa@i+1,f
  2697     00ED                     l1509:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 989:         c = 
      +                          d & 0x0f;
  2700     00ED  083F               	movf	xtoa@d,w
  2701     00EE  390F               	andlw	15
  2702     00EF  00CA               	movwf	xtoa@c
  2703     00F0                     l1511:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 991:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2706     00F0  300A               	movlw	10
  2707     00F1  024A               	subwf	xtoa@c,w
  2708     00F2  1C03               	skipc
  2709     00F3  28F5               	goto	u481
  2710     00F4  28F6               	goto	u480
  2711     00F5                     u481:
  2712     00F5  28FE               	goto	l1515
  2713     00F6                     u480:
  2714     00F6                     l1513:
  2715     00F6  084A               	movf	xtoa@c,w
  2716     00F7  3E57               	addlw	87
  2717     00F8  00C4               	movwf	_xtoa$1217
  2718     00F9  3000               	movlw	0
  2719     00FA  1803               	skipnc
  2720     00FB  3001               	movlw	1
  2721     00FC  00C5               	movwf	_xtoa$1217+1
  2722     00FD  2905               	goto	l1007
  2723     00FE                     l1515:
  2724     00FE  084A               	movf	xtoa@c,w
  2725     00FF  3E30               	addlw	48
  2726     0100  00C4               	movwf	_xtoa$1217
  2727     0101  3000               	movlw	0
  2728     0102  1803               	skipnc
  2729     0103  3001               	movlw	1
  2730     0104  00C5               	movwf	_xtoa$1217+1
  2731     0105                     l1007:
  2732     0105  0844               	movf	_xtoa$1217,w
  2733     0106  00CA               	movwf	xtoa@c
  2734     0107                     l1517:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1000:         dbu
      +                          f[i] = (char)c;
  2737     0107  0848               	movf	xtoa@i,w
  2738     0108  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2739     0109  0086               	movwf	6
  2740     010A  0187               	clrf	7
  2741     010B  084A               	movf	xtoa@c,w
  2742     010C  0081               	movwf	1
  2743     010D                     l1519:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1001:         --p
      +                          ;
  2746     010D  30FF               	movlw	255
  2747     010E  07C6               	addwf	xtoa@p,f
  2748     010F  30FF               	movlw	255
  2749     0110  3DC7               	addwfc	xtoa@p+1,f
  2750     0111                     l1521:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1002:         --w
      +                          ;
  2753     0111  30FF               	movlw	255
  2754     0112  07C2               	addwf	xtoa@w,f
  2755     0113  30FF               	movlw	255
  2756     0114  3DC3               	addwfc	xtoa@w+1,f
  2757     0115                     l1523:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1003:         d =
      +                           d >> 4;
  2760     0115  0E3F               	swapf	xtoa@d,w
  2761     0116  390F               	andlw	15
  2762     0117  00BF               	movwf	xtoa@d
  2763     0118  0E40               	swapf	xtoa@d+1,w
  2764     0119  39F0               	andlw	240
  2765     011A  04BF               	iorwf	xtoa@d,f
  2766     011B  0E40               	swapf	xtoa@d+1,w
  2767     011C  390F               	andlw	15
  2768     011D  00C0               	movwf	xtoa@d+1
  2769     011E                     l1525:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  2772     011E  0020               	movlb	0	; select bank0
  2773     011F  0849               	movf	xtoa@i+1,w
  2774     0120  3A80               	xorlw	128
  2775     0121  00C1               	movwf	??_xtoa
  2776     0122  3080               	movlw	128
  2777     0123  0241               	subwf	??_xtoa,w
  2778     0124  1D03               	skipz
  2779     0125  2928               	goto	u495
  2780     0126  3002               	movlw	2
  2781     0127  0248               	subwf	xtoa@i,w
  2782     0128                     u495:
  2783     0128  1C03               	skipc
  2784     0129  292B               	goto	u491
  2785     012A  292C               	goto	u490
  2786     012B                     u491:
  2787     012B  2940               	goto	l1531
  2788     012C                     u490:
  2789     012C                     l1527:
  2790     012C  0020               	movlb	0	; select bank0
  2791     012D  083F               	movf	xtoa@d,w
  2792     012E  0440               	iorwf	xtoa@d+1,w
  2793     012F  1D03               	btfss	3,2
  2794     0130  2932               	goto	u501
  2795     0131  2933               	goto	u500
  2796     0132                     u501:
  2797     0132  28E8               	goto	l1507
  2798     0133                     u500:
  2799     0133                     l1529:
  2800     0133  0847               	movf	xtoa@p+1,w
  2801     0134  3A80               	xorlw	128
  2802     0135  00C1               	movwf	??_xtoa
  2803     0136  3080               	movlw	128
  2804     0137  0241               	subwf	??_xtoa,w
  2805     0138  1D03               	skipz
  2806     0139  293C               	goto	u515
  2807     013A  3001               	movlw	1
  2808     013B  0246               	subwf	xtoa@p,w
  2809     013C                     u515:
  2810     013C  1803               	skipnc
  2811     013D  293F               	goto	u511
  2812     013E  2940               	goto	u510
  2813     013F                     u511:
  2814     013F  28E8               	goto	l1507
  2815     0140                     u510:
  2816     0140                     l1531:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1023:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2819     0140  0020               	movlb	0	; select bank0
  2820     0141  083E               	movf	xtoa@fp+1,w
  2821     0142  00B4               	movwf	pad@fp+1
  2822     0143  083D               	movf	xtoa@fp,w
  2823     0144  00B3               	movwf	pad@fp
  2824     0145  0848               	movf	xtoa@i,w
  2825     0146  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2826     0147  00B5               	movwf	pad@buf
  2827     0148  0843               	movf	xtoa@w+1,w
  2828     0149  00B7               	movwf	pad@p+1
  2829     014A  0842               	movf	xtoa@w,w
  2830     014B  00B6               	movwf	pad@p
  2831     014C  3181  21F8  3180   	fcall	_pad
  2832     014F                     l1011:
  2833     014F  0008               	return
  2834     0150                     __end_of_xtoa:
  2835                           
  2836                           	psect	text6
  2837     01F8                     __ptext6:	
  2838 ;; *************** function _pad *****************
  2839 ;; Defined at:
  2840 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  fp              2   19[BANK0 ] PTR struct _IO_FILE
  2843 ;;		 -> NULL(0), 
  2844 ;;  buf             1   21[BANK0 ] PTR unsigned char 
  2845 ;;		 -> dbuf(32), 
  2846 ;;  p               2   22[BANK0 ] int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  w               2   27[BANK0 ] int 
  2849 ;;  i               2   25[BANK0 ] int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2859 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;Total ram usage:       10 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 9
  2866 ;; This function calls:
  2867 ;;		_fputc
  2868 ;;		_fputs
  2869 ;; This function is called by:
  2870 ;;		_xtoa
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874     01F8                     _pad:	
  2875                           ;psect for function _pad
  2876                           
  2877     01F8                     l1485:	
  2878                           ;incstack = 0
  2879                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2880                           
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2883     01F8  0020               	movlb	0	; select bank0
  2884     01F9  1BB7               	btfsc	pad@p+1,7
  2885     01FA  29FC               	goto	u451
  2886     01FB  29FD               	goto	u450
  2887     01FC                     u451:
  2888     01FC  2A02               	goto	l1489
  2889     01FD                     u450:
  2890     01FD                     l1487:
  2891     01FD  0837               	movf	pad@p+1,w
  2892     01FE  00BC               	movwf	pad@w+1
  2893     01FF  0836               	movf	pad@p,w
  2894     0200  00BB               	movwf	pad@w
  2895     0201  2A04               	goto	l991
  2896     0202                     l1489:
  2897     0202  01BB               	clrf	pad@w
  2898     0203  01BC               	clrf	pad@w+1
  2899     0204                     l991:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2902     0204  01B9               	clrf	pad@i
  2903     0205  01BA               	clrf	pad@i+1
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2906     0206  2A18               	goto	l1495
  2907     0207                     l1491:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2910     0207  3020               	movlw	32
  2911     0208  0020               	movlb	0	; select bank0
  2912     0209  00A2               	movwf	fputc@c
  2913     020A  3000               	movlw	0
  2914     020B  00A3               	movwf	fputc@c+1
  2915     020C  0834               	movf	pad@fp+1,w
  2916     020D  00A5               	movwf	fputc@fp+1
  2917     020E  0833               	movf	pad@fp,w
  2918     020F  00A4               	movwf	fputc@fp
  2919     0210  3181  2150  3181   	fcall	_fputc
  2920     0213                     l1493:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2923     0213  3001               	movlw	1
  2924     0214  0020               	movlb	0	; select bank0
  2925     0215  07B9               	addwf	pad@i,f
  2926     0216  3000               	movlw	0
  2927     0217  3DBA               	addwfc	pad@i+1,f
  2928     0218                     l1495:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2931     0218  083A               	movf	pad@i+1,w
  2932     0219  3A80               	xorlw	128
  2933     021A  00B8               	movwf	??_pad
  2934     021B  083C               	movf	pad@w+1,w
  2935     021C  3A80               	xorlw	128
  2936     021D  0238               	subwf	??_pad,w
  2937     021E  1D03               	skipz
  2938     021F  2A22               	goto	u465
  2939     0220  083B               	movf	pad@w,w
  2940     0221  0239               	subwf	pad@i,w
  2941     0222                     u465:
  2942     0222  1C03               	skipc
  2943     0223  2A25               	goto	u461
  2944     0224  2A26               	goto	u460
  2945     0225                     u461:
  2946     0225  2A07               	goto	l1491
  2947     0226                     u460:
  2948     0226                     l1497:
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2951     0226  0020               	movlb	0	; select bank0
  2952     0227  0834               	movf	pad@fp+1,w
  2953     0228  00AC               	movwf	fputs@fp+1
  2954     0229  0833               	movf	pad@fp,w
  2955     022A  00AB               	movwf	fputs@fp
  2956     022B  0835               	movf	pad@buf,w
  2957     022C  3182  2257  3181   	fcall	_fputs
  2958     022F                     l995:
  2959     022F  0008               	return
  2960     0230                     __end_of_pad:
  2961                           
  2962                           	psect	text7
  2963     0257                     __ptext7:	
  2964 ;; *************** function _fputs *****************
  2965 ;; Defined at:
  2966 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  s               1    wreg     PTR const unsigned char 
  2969 ;;		 -> dbuf(32), 
  2970 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2971 ;;		 -> NULL(0), 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  2974 ;;		 -> dbuf(32), 
  2975 ;;  i               2   16[BANK0 ] int 
  2976 ;;  c               1   15[BANK0 ] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2   11[BANK0 ] int 
  2979 ;; Registers used:
  2980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;Total ram usage:        8 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 8
  2993 ;; This function calls:
  2994 ;;		_fputc
  2995 ;; This function is called by:
  2996 ;;		_pad
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000     0257                     _fputs:	
  3001                           ;psect for function _fputs
  3002                           
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3006                           ;fputs@s stored from wreg
  3007     0257  0020               	movlb	0	; select bank0
  3008     0258  00B2               	movwf	fputs@s
  3009     0259                     l1477:
  3010     0259  01B0               	clrf	fputs@i
  3011     025A  01B1               	clrf	fputs@i+1
  3012     025B  2A6F               	goto	l1483
  3013     025C                     l1479:
  3014     025C  082F               	movf	fputs@c,w
  3015     025D  00AD               	movwf	??_fputs
  3016     025E  01AE               	clrf	??_fputs+1
  3017     025F  082D               	movf	??_fputs,w
  3018     0260  00A2               	movwf	fputc@c
  3019     0261  082E               	movf	??_fputs+1,w
  3020     0262  00A3               	movwf	fputc@c+1
  3021     0263  082C               	movf	fputs@fp+1,w
  3022     0264  00A5               	movwf	fputc@fp+1
  3023     0265  082B               	movf	fputs@fp,w
  3024     0266  00A4               	movwf	fputc@fp
  3025     0267  3181  2150  3182   	fcall	_fputc
  3026     026A                     l1481:
  3027     026A  3001               	movlw	1
  3028     026B  0020               	movlb	0	; select bank0
  3029     026C  07B0               	addwf	fputs@i,f
  3030     026D  3000               	movlw	0
  3031     026E  3DB1               	addwfc	fputs@i+1,f
  3032     026F                     l1483:
  3033     026F  0830               	movf	fputs@i,w
  3034     0270  0732               	addwf	fputs@s,w
  3035     0271  00AD               	movwf	??_fputs
  3036     0272  082D               	movf	??_fputs,w
  3037     0273  0086               	movwf	6
  3038     0274  0187               	clrf	7
  3039     0275  0801               	movf	1,w
  3040     0276  00AF               	movwf	fputs@c
  3041     0277  082F               	movf	fputs@c,w
  3042     0278  1D03               	btfss	3,2
  3043     0279  2A7B               	goto	u441
  3044     027A  2A7C               	goto	u440
  3045     027B                     u441:
  3046     027B  2A5C               	goto	l1479
  3047     027C                     u440:
  3048     027C                     l1047:
  3049     027C  0008               	return
  3050     027D                     __end_of_fputs:
  3051                           
  3052                           	psect	text8
  3053     0150                     __ptext8:	
  3054 ;; *************** function _fputc *****************
  3055 ;; Defined at:
  3056 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  c               2    2[BANK0 ] int 
  3059 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  3060 ;;		 -> NULL(0), 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    2[BANK0 ] int 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;Total ram usage:        9 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 7
  3079 ;; This function calls:
  3080 ;;		_putch
  3081 ;; This function is called by:
  3082 ;;		_pad
  3083 ;;		_vfpfcnvrt
  3084 ;;		_fputs
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088     0150                     _fputc:	
  3089                           ;psect for function _fputc
  3090                           
  3091     0150                     l1461:	
  3092                           ;incstack = 0
  3093                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3094                           
  3095     0150  0020               	movlb	0	; select bank0
  3096     0151  0824               	movf	fputc@fp,w
  3097     0152  0425               	iorwf	fputc@fp+1,w
  3098     0153  1903               	btfsc	3,2
  3099     0154  2956               	goto	u401
  3100     0155  2957               	goto	u400
  3101     0156                     u401:
  3102     0156  295D               	goto	l1465
  3103     0157                     u400:
  3104     0157                     l1463:
  3105     0157  0824               	movf	fputc@fp,w
  3106     0158  0425               	iorwf	fputc@fp+1,w
  3107     0159  1D03               	btfss	3,2
  3108     015A  295C               	goto	u411
  3109     015B  295D               	goto	u410
  3110     015C                     u411:
  3111     015C  2962               	goto	l1467
  3112     015D                     u410:
  3113     015D                     l1465:
  3114     015D  0822               	movf	fputc@c,w
  3115     015E  3183  23F6  3181   	fcall	_putch
  3116     0161  29AE               	goto	l1039
  3117     0162                     l1467:
  3118     0162  0824               	movf	fputc@fp,w
  3119     0163  0086               	movwf	6
  3120     0164  0825               	movf	fputc@fp+1,w
  3121     0165  0087               	movwf	7
  3122     0166  3149               	addfsr 1,9
  3123     0167  0016               	moviw fsr1++
  3124     0168  0401               	iorwf	1,w
  3125     0169  1903               	btfsc	3,2
  3126     016A  296C               	goto	u421
  3127     016B  296D               	goto	u420
  3128     016C                     u421:
  3129     016C  298D               	goto	l1471
  3130     016D                     u420:
  3131     016D                     l1469:
  3132     016D  0824               	movf	fputc@fp,w
  3133     016E  0086               	movwf	6
  3134     016F  0825               	movf	fputc@fp+1,w
  3135     0170  0087               	movwf	7
  3136     0171  3149               	addfsr 1,9
  3137     0172  3F40               	moviw [0]fsr1
  3138     0173  00A6               	movwf	??_fputc
  3139     0174  3F41               	moviw [1]fsr1
  3140     0175  00A7               	movwf	??_fputc+1
  3141     0176  0824               	movf	fputc@fp,w
  3142     0177  0086               	movwf	6
  3143     0178  0825               	movf	fputc@fp+1,w
  3144     0179  0087               	movwf	7
  3145     017A  3142               	addfsr 1,2
  3146     017B  3F40               	moviw [0]fsr1
  3147     017C  00A8               	movwf	??_fputc+2
  3148     017D  3F41               	moviw [1]fsr1
  3149     017E  00A9               	movwf	??_fputc+3
  3150     017F  0829               	movf	??_fputc+3,w
  3151     0180  3A80               	xorlw	128
  3152     0181  00AA               	movwf	??_fputc+4
  3153     0182  0827               	movf	??_fputc+1,w
  3154     0183  3A80               	xorlw	128
  3155     0184  022A               	subwf	??_fputc+4,w
  3156     0185  1D03               	skipz
  3157     0186  2989               	goto	u435
  3158     0187  0826               	movf	??_fputc,w
  3159     0188  0228               	subwf	??_fputc+2,w
  3160     0189                     u435:
  3161     0189  1803               	skipnc
  3162     018A  298C               	goto	u431
  3163     018B  298D               	goto	u430
  3164     018C                     u431:
  3165     018C  29AE               	goto	l1039
  3166     018D                     u430:
  3167     018D                     l1471:
  3168     018D  0020               	movlb	0	; select bank0
  3169     018E  0824               	movf	fputc@fp,w
  3170     018F  0086               	movwf	6
  3171     0190  0825               	movf	fputc@fp+1,w
  3172     0191  0087               	movwf	7
  3173     0192  3142               	addfsr 1,2
  3174     0193  0824               	movf	fputc@fp,w
  3175     0194  0084               	movwf	4
  3176     0195  0825               	movf	fputc@fp+1,w
  3177     0196  0085               	movwf	5
  3178     0197  3F40               	moviw [0]fsr1
  3179     0198  0700               	addwf	0,w
  3180     0199  00A6               	movwf	??_fputc
  3181     019A  3101               	addfsr 0,1
  3182     019B  3F41               	moviw [1]fsr1
  3183     019C  3D00               	addwfc	0,w
  3184     019D  00A7               	movwf	??_fputc+1
  3185     019E  0826               	movf	??_fputc,w
  3186     019F  0086               	movwf	6
  3187     01A0  0827               	movf	??_fputc+1,w
  3188     01A1  0087               	movwf	7
  3189     01A2  0822               	movf	fputc@c,w
  3190     01A3  0081               	movwf	1
  3191     01A4                     l1473:
  3192     01A4  0824               	movf	fputc@fp,w
  3193     01A5  0086               	movwf	6
  3194     01A6  0825               	movf	fputc@fp+1,w
  3195     01A7  0087               	movwf	7
  3196     01A8  3142               	addfsr 1,2
  3197     01A9  3001               	movlw	1
  3198     01AA  0781               	addwf	1,f
  3199     01AB  3141               	addfsr 1,1
  3200     01AC  1803               	skipnc
  3201     01AD  0A81               	incf	1,f
  3202     01AE                     l1039:
  3203     01AE  0008               	return
  3204     01AF                     __end_of_fputc:
  3205                           
  3206                           	psect	text9
  3207     03F6                     __ptext9:	
  3208 ;; *************** function _putch *****************
  3209 ;; Defined at:
  3210 ;;		line 146 in file "mcc_generated_files/eusart.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  txData          1    wreg     unsigned char 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  txData          1    1[BANK0 ] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;Total ram usage:        1 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 6
  3231 ;; This function calls:
  3232 ;;		_EUSART_Write
  3233 ;; This function is called by:
  3234 ;;		_fputc
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238     03F6                     _putch:	
  3239                           ;psect for function _putch
  3240                           
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3244                           ;putch@txData stored from wreg
  3245     03F6  0020               	movlb	0	; select bank0
  3246     03F7  00A1               	movwf	putch@txData
  3247     03F8                     l1459:
  3248                           
  3249                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  3250     03F8  0821               	movf	putch@txData,w
  3251     03F9  3183  23D1  3183   	fcall	_EUSART_Write
  3252     03FC                     l228:
  3253     03FC  0008               	return
  3254     03FD                     __end_of_putch:
  3255                           
  3256                           	psect	text10
  3257     03D1                     __ptext10:	
  3258 ;; *************** function _EUSART_Write *****************
  3259 ;; Defined at:
  3260 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  txData          1    wreg     unsigned char 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  txData          1    0[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;Total ram usage:        1 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 5
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_putch
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288     03D1                     _EUSART_Write:	
  3289                           ;psect for function _EUSART_Write
  3290                           
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _EUSART_Write: [wreg]
  3294                           ;EUSART_Write@txData stored from wreg
  3295     03D1  0020               	movlb	0	; select bank0
  3296     03D2  00A0               	movwf	EUSART_Write@txData
  3297     03D3                     l1455:
  3298     03D3                     l219:	
  3299                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3300                           
  3301                           
  3302                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3303     03D3  1E11               	btfss	17,4	;volatile
  3304     03D4  2BD6               	goto	u391
  3305     03D5  2BD7               	goto	u390
  3306     03D6                     u391:
  3307     03D6  2BD3               	goto	l219
  3308     03D7                     u390:
  3309     03D7                     l1457:
  3310                           
  3311                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3312     03D7  0820               	movf	EUSART_Write@txData,w
  3313     03D8  0023               	movlb	3	; select bank3
  3314     03D9  009A               	movwf	26	;volatile
  3315     03DA                     l222:
  3316     03DA  0008               	return
  3317     03DB                     __end_of_EUSART_Write:
  3318                           
  3319                           	psect	text11
  3320     0356                     __ptext11:	
  3321 ;; *************** function _SYSTEM_Initialize *****************
  3322 ;; Defined at:
  3323 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 7
  3344 ;; This function calls:
  3345 ;;		_EUSART_Initialize
  3346 ;;		_OSCILLATOR_Initialize
  3347 ;;		_PIN_MANAGER_Initialize
  3348 ;;		_SPI1_Initialize
  3349 ;;		_TMR1_Initialize
  3350 ;;		_WDT_Initialize
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356     0356                     _SYSTEM_Initialize:	
  3357                           ;psect for function _SYSTEM_Initialize
  3358                           
  3359     0356                     l1703:	
  3360                           ;incstack = 0
  3361                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3362                           
  3363                           
  3364                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  3365     0356  3183  23A3  3183   	fcall	_SPI1_Initialize
  3366                           
  3367                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3368     0359  3183  2309  3183   	fcall	_PIN_MANAGER_Initialize
  3369                           
  3370                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3371     035C  3183  23AF  3183   	fcall	_OSCILLATOR_Initialize
  3372                           
  3373                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3374     035F  3184  240F  3183   	fcall	_WDT_Initialize
  3375                           
  3376                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  3377     0362  3183  2326  3183   	fcall	_TMR1_Initialize
  3378                           
  3379                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  3380     0365  3182  227D  3183   	fcall	_EUSART_Initialize
  3381     0368                     l25:
  3382     0368  0008               	return
  3383     0369                     __end_of_SYSTEM_Initialize:
  3384                           
  3385                           	psect	text12
  3386     040F                     __ptext12:	
  3387 ;; *************** function _WDT_Initialize *****************
  3388 ;; Defined at:
  3389 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 5
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_SYSTEM_Initialize
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417     040F                     _WDT_Initialize:	
  3418                           ;psect for function _WDT_Initialize
  3419                           
  3420     040F                     l1651:	
  3421                           ;incstack = 0
  3422                           ; Regs used in _WDT_Initialize: [wreg]
  3423                           
  3424                           
  3425                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  3426     040F  3016               	movlw	22
  3427     0410  0021               	movlb	1	; select bank1
  3428     0411  0097               	movwf	23	;volatile
  3429     0412                     l34:
  3430     0412  0008               	return
  3431     0413                     __end_of_WDT_Initialize:
  3432                           
  3433                           	psect	text13
  3434     0326                     __ptext13:	
  3435 ;; *************** function _TMR1_Initialize *****************
  3436 ;; Defined at:
  3437 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 6
  3458 ;; This function calls:
  3459 ;;		_TMR1_SetInterruptHandler
  3460 ;; This function is called by:
  3461 ;;		_SYSTEM_Initialize
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465     0326                     _TMR1_Initialize:	
  3466                           ;psect for function _TMR1_Initialize
  3467                           
  3468     0326                     l1653:	
  3469                           ;incstack = 0
  3470                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3471                           
  3472                           
  3473                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3474     0326  0020               	movlb	0	; select bank0
  3475     0327  0199               	clrf	25	;volatile
  3476     0328                     l1655:
  3477                           
  3478                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x3C;
  3479     0328  303C               	movlw	60
  3480     0329  0097               	movwf	23	;volatile
  3481     032A                     l1657:
  3482                           
  3483                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xB0;
  3484     032A  30B0               	movlw	176
  3485     032B  0096               	movwf	22	;volatile
  3486     032C                     l1659:
  3487                           
  3488                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3489     032C  1011               	bcf	17,0	;volatile
  3490     032D                     l1661:
  3491                           
  3492                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3493     032D  0817               	movf	23,w	;volatile
  3494     032E  00FD               	movwf	_timer1ReloadVal+1	;volatile
  3495     032F  0816               	movf	22,w	;volatile
  3496     0330  00FC               	movwf	_timer1ReloadVal	;volatile
  3497     0331                     l1663:
  3498                           
  3499                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3500     0331  0021               	movlb	1	; select bank1
  3501     0332  1411               	bsf	17,0	;volatile
  3502     0333                     l1665:
  3503                           
  3504                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3505     0333  3013               	movlw	low _TMR1_DefaultInterruptHandler
  3506     0334  0020               	movlb	0	; select bank0
  3507     0335  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3508     0336  3004               	movlw	high _TMR1_DefaultInterruptHandler
  3509     0337  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3510     0338  3184  2409  3183   	fcall	_TMR1_SetInterruptHandler
  3511     033B                     l1667:
  3512                           
  3513                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  3514     033B  3031               	movlw	49
  3515     033C  0020               	movlb	0	; select bank0
  3516     033D  0098               	movwf	24	;volatile
  3517     033E                     l116:
  3518     033E  0008               	return
  3519     033F                     __end_of_TMR1_Initialize:
  3520                           
  3521                           	psect	text14
  3522     0409                     __ptext14:	
  3523 ;; *************** function _TMR1_SetInterruptHandler *****************
  3524 ;; Defined at:
  3525 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3528 ;;		 -> loop(1), TMR1_DefaultInterruptHandler(1), 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;Total ram usage:        2 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 5
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_TMR1_Initialize
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555     0409                     _TMR1_SetInterruptHandler:	
  3556                           ;psect for function _TMR1_SetInterruptHandler
  3557                           
  3558     0409                     l1591:	
  3559                           ;incstack = 0
  3560                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3561                           
  3562                           
  3563                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  3564     0409  0020               	movlb	0	; select bank0
  3565     040A  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3566     040B  00FB               	movwf	_TMR1_InterruptHandler+1
  3567     040C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3568     040D  00FA               	movwf	_TMR1_InterruptHandler
  3569     040E                     l149:
  3570     040E  0008               	return
  3571     040F                     __end_of_TMR1_SetInterruptHandler:
  3572                           
  3573                           	psect	text15
  3574     03A3                     __ptext15:	
  3575 ;; *************** function _SPI1_Initialize *****************
  3576 ;; Defined at:
  3577 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 5
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_SYSTEM_Initialize
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     03A3                     _SPI1_Initialize:	
  3606                           ;psect for function _SPI1_Initialize
  3607                           
  3608     03A3                     l1619:	
  3609                           ;incstack = 0
  3610                           ; Regs used in _SPI1_Initialize: [wreg]
  3611                           
  3612                           
  3613                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x40;
  3614     03A3  3040               	movlw	64
  3615     03A4  0024               	movlb	4	; select bank4
  3616     03A5  0094               	movwf	20	;volatile
  3617                           
  3618                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x02;
  3619     03A6  3002               	movlw	2
  3620     03A7  0095               	movwf	21	;volatile
  3621                           
  3622                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  3623     03A8  3001               	movlw	1
  3624     03A9  0092               	movwf	18	;volatile
  3625     03AA                     l1621:
  3626                           
  3627                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB6 = 0;
  3628     03AA  0021               	movlb	1	; select bank1
  3629     03AB  130D               	bcf	13,6	;volatile
  3630     03AC                     l1623:
  3631                           
  3632                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 1;
  3633     03AC  0024               	movlb	4	; select bank4
  3634     03AD  1695               	bsf	21,5	;volatile
  3635     03AE                     l312:
  3636     03AE  0008               	return
  3637     03AF                     __end_of_SPI1_Initialize:
  3638                           
  3639                           	psect	text16
  3640     0309                     __ptext16:	
  3641 ;; *************** function _PIN_MANAGER_Initialize *****************
  3642 ;; Defined at:
  3643 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 5
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_SYSTEM_Initialize
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671     0309                     _PIN_MANAGER_Initialize:	
  3672                           ;psect for function _PIN_MANAGER_Initialize
  3673                           
  3674     0309                     l1625:	
  3675                           ;incstack = 0
  3676                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3677                           
  3678                           
  3679                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3680     0309  0022               	movlb	2	; select bank2
  3681     030A  018C               	clrf	12	;volatile
  3682                           
  3683                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3684     030B  018D               	clrf	13	;volatile
  3685                           
  3686                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3687     030C  018E               	clrf	14	;volatile
  3688     030D                     l1627:
  3689                           
  3690                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3691     030D  303F               	movlw	63
  3692     030E  0021               	movlb	1	; select bank1
  3693     030F  008C               	movwf	12	;volatile
  3694     0310                     l1629:
  3695                           
  3696                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x10;
  3697     0310  3010               	movlw	16
  3698     0311  008D               	movwf	13	;volatile
  3699     0312                     l1631:
  3700                           
  3701                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x7F;
  3702     0312  307F               	movlw	127
  3703     0313  008E               	movwf	14	;volatile
  3704     0314                     l1633:
  3705                           
  3706                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x4D;
  3707     0314  304D               	movlw	77
  3708     0315  0023               	movlb	3	; select bank3
  3709     0316  008E               	movwf	14	;volatile
  3710     0317                     l1635:
  3711                           
  3712                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  3713     0317  3020               	movlw	32
  3714     0318  008D               	movwf	13	;volatile
  3715     0319                     l1637:
  3716                           
  3717                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  3718     0319  3017               	movlw	23
  3719     031A  008C               	movwf	12	;volatile
  3720                           
  3721                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3722     031B  0024               	movlb	4	; select bank4
  3723     031C  018D               	clrf	13	;volatile
  3724                           
  3725                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3726     031D  018C               	clrf	12	;volatile
  3727                           
  3728                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3729     031E  018E               	clrf	14	;volatile
  3730     031F                     l1639:
  3731                           
  3732                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3733     031F  0021               	movlb	1	; select bank1
  3734     0320  1795               	bsf	21,7	;volatile
  3735     0321                     l1641:
  3736                           
  3737                           ;mcc_generated_files/pin_manager.c: 90:     APFCON0 = 0x84;
  3738     0321  3084               	movlw	132
  3739     0322  0022               	movlb	2	; select bank2
  3740     0323  009D               	movwf	29	;volatile
  3741     0324                     l1643:
  3742                           
  3743                           ;mcc_generated_files/pin_manager.c: 91:     APFCON1 = 0x00;
  3744     0324  019E               	clrf	30	;volatile
  3745     0325                     l67:
  3746     0325  0008               	return
  3747     0326                     __end_of_PIN_MANAGER_Initialize:
  3748                           
  3749                           	psect	text17
  3750     03AF                     __ptext17:	
  3751 ;; *************** function _OSCILLATOR_Initialize *****************
  3752 ;; Defined at:
  3753 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 5
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_SYSTEM_Initialize
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781     03AF                     _OSCILLATOR_Initialize:	
  3782                           ;psect for function _OSCILLATOR_Initialize
  3783                           
  3784     03AF                     l1645:	
  3785                           ;incstack = 0
  3786                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3787                           
  3788                           
  3789                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3790     03AF  3070               	movlw	112
  3791     03B0  0021               	movlb	1	; select bank1
  3792     03B1  0099               	movwf	25	;volatile
  3793     03B2                     l1647:
  3794                           
  3795                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3796     03B2  0198               	clrf	24	;volatile
  3797     03B3                     l1649:
  3798                           
  3799                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3800     03B3  0022               	movlb	2	; select bank2
  3801     03B4  0196               	clrf	22	;volatile
  3802     03B5                     l28:	
  3803                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  3804                           
  3805                           
  3806                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  3807     03B5  0021               	movlb	1	; select bank1
  3808     03B6  1F1A               	btfss	26,6	;volatile
  3809     03B7  2BB9               	goto	u601
  3810     03B8  2BBA               	goto	u600
  3811     03B9                     u601:
  3812     03B9  2BB5               	goto	l28
  3813     03BA                     u600:
  3814     03BA                     l31:
  3815     03BA  0008               	return
  3816     03BB                     __end_of_OSCILLATOR_Initialize:
  3817                           
  3818                           	psect	text18
  3819     027D                     __ptext18:	
  3820 ;; *************** function _EUSART_Initialize *****************
  3821 ;; Defined at:
  3822 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 6
  3843 ;; This function calls:
  3844 ;;		_EUSART_SetErrorHandler
  3845 ;;		_EUSART_SetFramingErrorHandler
  3846 ;;		_EUSART_SetOverrunErrorHandler
  3847 ;; This function is called by:
  3848 ;;		_SYSTEM_Initialize
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852     027D                     _EUSART_Initialize:	
  3853                           ;psect for function _EUSART_Initialize
  3854                           
  3855     027D                     l1669:	
  3856                           ;incstack = 0
  3857                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3858                           
  3859                           
  3860                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3861     027D  3008               	movlw	8
  3862     027E  0023               	movlb	3	; select bank3
  3863     027F  009F               	movwf	31	;volatile
  3864                           
  3865                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3866     0280  3090               	movlw	144
  3867     0281  009D               	movwf	29	;volatile
  3868                           
  3869                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3870     0282  3024               	movlw	36
  3871     0283  009E               	movwf	30	;volatile
  3872                           
  3873                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  3874     0284  3040               	movlw	64
  3875     0285  009B               	movwf	27	;volatile
  3876                           
  3877                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  3878     0286  3003               	movlw	3
  3879     0287  009C               	movwf	28	;volatile
  3880     0288                     l1671:
  3881                           
  3882                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3883     0288  3000               	movlw	0
  3884     0289  0020               	movlb	0	; select bank0
  3885     028A  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3886     028B  3000               	movlw	0
  3887     028C  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3888     028D  3183  23E4  3182   	fcall	_EUSART_SetFramingErrorHandler
  3889     0290                     l1673:
  3890                           
  3891                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3892     0290  3000               	movlw	0
  3893     0291  0020               	movlb	0	; select bank0
  3894     0292  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3895     0293  3000               	movlw	0
  3896     0294  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3897     0295  3183  23DB  3182   	fcall	_EUSART_SetOverrunErrorHandler
  3898     0298                     l1675:
  3899                           
  3900                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3901     0298  3000               	movlw	0
  3902     0299  0020               	movlb	0	; select bank0
  3903     029A  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3904     029B  3000               	movlw	0
  3905     029C  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3906     029D  3183  23ED  3182   	fcall	_EUSART_SetErrorHandler
  3907     02A0                     l1677:
  3908                           
  3909                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3910     02A0  0020               	movlb	0	; select bank0
  3911     02A1  01EE               	clrf	_eusartRxLastError	;volatile
  3912     02A2                     l195:
  3913     02A2  0008               	return
  3914     02A3                     __end_of_EUSART_Initialize:
  3915                           
  3916                           	psect	text19
  3917     03DB                     __ptext19:	
  3918 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3919 ;; Defined at:
  3920 ;;		line 170 in file "mcc_generated_files/eusart.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3923 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;Total ram usage:        2 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 5
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_EUSART_Initialize
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949     03DB                     _EUSART_SetOverrunErrorHandler:	
  3950                           ;psect for function _EUSART_SetOverrunErrorHandler
  3951                           
  3952     03DB                     l1595:	
  3953                           ;incstack = 0
  3954                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3955                           
  3956                           
  3957                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  3958     03DB  0020               	movlb	0	; select bank0
  3959     03DC  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3960     03DD  0021               	movlb	1	; select bank1
  3961     03DE  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3962     03DF  0020               	movlb	0	; select bank0
  3963     03E0  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3964     03E1  0021               	movlb	1	; select bank1
  3965     03E2  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3966     03E3                     l243:
  3967     03E3  0008               	return
  3968     03E4                     __end_of_EUSART_SetOverrunErrorHandler:
  3969                           
  3970                           	psect	text20
  3971     03E4                     __ptext20:	
  3972 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3973 ;; Defined at:
  3974 ;;		line 166 in file "mcc_generated_files/eusart.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3977 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 5
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_EUSART_Initialize
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     03E4                     _EUSART_SetFramingErrorHandler:	
  4004                           ;psect for function _EUSART_SetFramingErrorHandler
  4005                           
  4006     03E4                     l1593:	
  4007                           ;incstack = 0
  4008                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4009                           
  4010                           
  4011                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  4012     03E4  0020               	movlb	0	; select bank0
  4013     03E5  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4014     03E6  0021               	movlb	1	; select bank1
  4015     03E7  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4016     03E8  0020               	movlb	0	; select bank0
  4017     03E9  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4018     03EA  0021               	movlb	1	; select bank1
  4019     03EB  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4020     03EC                     l240:
  4021     03EC  0008               	return
  4022     03ED                     __end_of_EUSART_SetFramingErrorHandler:
  4023                           
  4024                           	psect	text21
  4025     03ED                     __ptext21:	
  4026 ;; *************** function _EUSART_SetErrorHandler *****************
  4027 ;; Defined at:
  4028 ;;		line 174 in file "mcc_generated_files/eusart.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4031 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;Total ram usage:        2 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 5
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_EUSART_Initialize
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057     03ED                     _EUSART_SetErrorHandler:	
  4058                           ;psect for function _EUSART_SetErrorHandler
  4059                           
  4060     03ED                     l1597:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4063                           
  4064                           
  4065                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  4066     03ED  0020               	movlb	0	; select bank0
  4067     03EE  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4068     03EF  0021               	movlb	1	; select bank1
  4069     03F0  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4070     03F1  0020               	movlb	0	; select bank0
  4071     03F2  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4072     03F3  0021               	movlb	1	; select bank1
  4073     03F4  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  4074     03F5                     l246:
  4075     03F5  0008               	return
  4076     03F6                     __end_of_EUSART_SetErrorHandler:
  4077                           
  4078                           	psect	intentry
  4079     0004                     __pintentry:	
  4080 ;; *************** function _INTERRUPT_InterruptManager *****************
  4081 ;; Defined at:
  4082 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 4
  4103 ;; This function calls:
  4104 ;;		_TMR1_ISR
  4105 ;; This function is called by:
  4106 ;;		Interrupt level 1
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110     0004                     _INTERRUPT_InterruptManager:
  4111                           
  4112                           ;incstack = 0
  4113     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4114                           
  4115                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4116     0005  3180               	pagesel	$
  4117     0006                     i1l1741:
  4118                           
  4119                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4120     0006  1F0B               	btfss	11,6	;volatile
  4121     0007  2809               	goto	u68_21
  4122     0008  280A               	goto	u68_20
  4123     0009                     u68_21:
  4124     0009  2817               	goto	i1l87
  4125     000A                     u68_20:
  4126     000A                     i1l1743:
  4127                           
  4128                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4129     000A  0021               	movlb	1	; select bank1
  4130     000B  1C11               	btfss	17,0	;volatile
  4131     000C  280E               	goto	u69_21
  4132     000D  280F               	goto	u69_20
  4133     000E                     u69_21:
  4134     000E  2817               	goto	i1l87
  4135     000F                     u69_20:
  4136     000F                     i1l1745:
  4137     000F  0020               	movlb	0	; select bank0
  4138     0010  1C11               	btfss	17,0	;volatile
  4139     0011  2813               	goto	u70_21
  4140     0012  2814               	goto	u70_20
  4141     0013                     u70_21:
  4142     0013  2817               	goto	i1l87
  4143     0014                     u70_20:
  4144     0014                     i1l1747:
  4145                           
  4146                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  4147     0014  3183  238A  3180   	fcall	_TMR1_ISR
  4148     0017                     i1l87:	
  4149                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4150                           
  4151     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4152     0018  0009               	retfie
  4153     0019                     __end_of_INTERRUPT_InterruptManager:
  4154                           
  4155                           	psect	text23
  4156     038A                     __ptext23:	
  4157 ;; *************** function _TMR1_ISR *****************
  4158 ;; Defined at:
  4159 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 3
  4180 ;; This function calls:
  4181 ;;		_TMR1_CallBack
  4182 ;;		_TMR1_WriteTimer
  4183 ;; This function is called by:
  4184 ;;		_INTERRUPT_InterruptManager
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188     038A                     _TMR1_ISR:	
  4189                           ;psect for function _TMR1_ISR
  4190                           
  4191     038A                     i1l1705:	
  4192                           ;incstack = 0
  4193                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4194                           
  4195                           
  4196                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  4197     038A  0020               	movlb	0	; select bank0
  4198     038B  1011               	bcf	17,0	;volatile
  4199     038C                     i1l1707:
  4200                           
  4201                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  4202     038C  087D               	movf	_timer1ReloadVal+1,w	;volatile
  4203     038D  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4204     038E  087C               	movf	_timer1ReloadVal,w	;volatile
  4205     038F  00F0               	movwf	TMR1_WriteTimer@timerVal
  4206     0390  3183  2369  3183   	fcall	_TMR1_WriteTimer
  4207     0393                     i1l1709:
  4208                           
  4209                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  4210     0393  3183  23BB  3183   	fcall	_TMR1_CallBack
  4211     0396                     i1l142:
  4212     0396  0008               	return
  4213     0397                     __end_of_TMR1_ISR:
  4214                           
  4215                           	psect	text24
  4216     0369                     __ptext24:	
  4217 ;; *************** function _TMR1_WriteTimer *****************
  4218 ;; Defined at:
  4219 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  timerVal        2    0[COMMON] unsigned short 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_TMR1_ISR
  4243 ;;		_TMR1_Reload
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0369                     _TMR1_WriteTimer:	
  4248                           ;psect for function _TMR1_WriteTimer
  4249                           
  4250     0369                     i1l1679:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4253                           
  4254                           
  4255                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4256     0369  0020               	movlb	0	; select bank0
  4257     036A  1D18               	btfss	24,2	;volatile
  4258     036B  2B6D               	goto	u61_21
  4259     036C  2B6E               	goto	u61_20
  4260     036D                     u61_21:
  4261     036D  2B75               	goto	i1l1689
  4262     036E                     u61_20:
  4263     036E                     i1l1681:
  4264                           
  4265                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4266     036E  1018               	bcf	24,0	;volatile
  4267     036F                     i1l1683:
  4268                           
  4269                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4270     036F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4271     0370  0097               	movwf	23	;volatile
  4272     0371                     i1l1685:
  4273                           
  4274                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4275     0371  0870               	movf	TMR1_WriteTimer@timerVal,w
  4276     0372  0096               	movwf	22	;volatile
  4277     0373                     i1l1687:
  4278                           
  4279                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4280     0373  1418               	bsf	24,0	;volatile
  4281                           
  4282                           ;mcc_generated_files/tmr1.c: 133:     }
  4283     0374  2B79               	goto	i1l130
  4284     0375                     i1l1689:
  4285                           
  4286                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4287     0375  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4288     0376  0097               	movwf	23	;volatile
  4289     0377                     i1l1691:
  4290                           
  4291                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4292     0377  0870               	movf	TMR1_WriteTimer@timerVal,w
  4293     0378  0096               	movwf	22	;volatile
  4294     0379                     i1l130:
  4295     0379  0008               	return
  4296     037A                     __end_of_TMR1_WriteTimer:
  4297                           
  4298                           	psect	text25
  4299     03BB                     __ptext25:	
  4300 ;; *************** function _TMR1_CallBack *****************
  4301 ;; Defined at:
  4302 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 2
  4323 ;; This function calls:
  4324 ;;		NULL
  4325 ;;		_TMR1_DefaultInterruptHandler
  4326 ;;		_loop
  4327 ;; This function is called by:
  4328 ;;		_TMR1_ISR
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332     03BB                     _TMR1_CallBack:	
  4333                           ;psect for function _TMR1_CallBack
  4334                           
  4335     03BB                     i1l1693:	
  4336                           ;incstack = 0
  4337                           ; Regs used in _TMR1_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4338                           
  4339                           
  4340                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  4341     03BB  087A               	movf	_TMR1_InterruptHandler,w
  4342     03BC  047B               	iorwf	_TMR1_InterruptHandler+1,w
  4343     03BD  1903               	btfsc	3,2
  4344     03BE  2BC0               	goto	u62_21
  4345     03BF  2BC1               	goto	u62_20
  4346     03C0                     u62_21:
  4347     03C0  2BC6               	goto	i1l146
  4348     03C1                     u62_20:
  4349     03C1                     i1l1695:
  4350                           
  4351                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  4352     03C1  087B               	movf	_TMR1_InterruptHandler+1,w
  4353     03C2  008A               	movwf	10
  4354     03C3  087A               	movf	_TMR1_InterruptHandler,w
  4355     03C4  000A               	callw
  4356     03C5  3183               	pagesel	$
  4357     03C6                     i1l146:
  4358     03C6  0008               	return
  4359     03C7                     __end_of_TMR1_CallBack:
  4360                           
  4361                           	psect	text26
  4362     0413                     __ptext26:	
  4363 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4364 ;; Defined at:
  4365 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		None
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_TMR1_Initialize
  4389 ;;		_TMR1_CallBack
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393     0413                     _TMR1_DefaultInterruptHandler:	
  4394                           ;psect for function _TMR1_DefaultInterruptHandler
  4395                           
  4396     0413                     i1l152:	
  4397                           ;incstack = 0
  4398                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4399                           
  4400     0413  0008               	return
  4401     0414                     __end_of_TMR1_DefaultInterruptHandler:
  4402                           
  4403                           	psect	text27
  4404     02C8                     __ptext27:	
  4405 ;; *************** function _loop *****************
  4406 ;; Defined at:
  4407 ;;		line 9 in file "main.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 1
  4428 ;; This function calls:
  4429 ;;		_SPI1_ExchangeBlock
  4430 ;;		_memcpy
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;;		_TMR1_CallBack
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437     02C8                     _loop:	
  4438                           ;psect for function _loop
  4439                           
  4440     02C8                     i1l269:	
  4441                           ;incstack = 0
  4442                           ; Regs used in _loop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4443                           ;main.c: 11:     do { LATBbits.LATB7 = ~LATBbits.LATB7; } while(0);
  4444                           
  4445     02C8                     i1l1599:
  4446     02C8  1003               	clrc
  4447     02C9  0022               	movlb	2	; select bank2
  4448     02CA  1F8D               	btfss	13,7	;volatile
  4449     02CB  1403               	setc
  4450     02CC  1803               	btfsc	3,0
  4451     02CD  2ACF               	goto	u57_21
  4452     02CE  2AD2               	goto	u57_20
  4453     02CF                     u57_21:
  4454     02CF  0022               	movlb	2	; select bank2
  4455     02D0  178D               	bsf	13,7	;volatile
  4456     02D1  2AD4               	goto	u58_24
  4457     02D2                     u57_20:
  4458     02D2  0022               	movlb	2	; select bank2
  4459     02D3  138D               	bcf	13,7	;volatile
  4460     02D4                     u58_24:
  4461     02D4                     i1l1601:
  4462                           
  4463                           ;main.c: 12:     memcpy(DISPLAY_T, DISPLAY_W, 3);
  4464     02D4  30C9               	movlw	(low (_DISPLAY_W| 0))& (0+255)
  4465     02D5  00F0               	movwf	memcpy@s1
  4466     02D6  3003               	movlw	3
  4467     02D7  00F1               	movwf	memcpy@n
  4468     02D8  3000               	movlw	0
  4469     02D9  00F2               	movwf	memcpy@n+1
  4470     02DA  30C6               	movlw	(low (_DISPLAY_T| 0))& (0+255)
  4471     02DB  3182  22A3  3182   	fcall	_memcpy
  4472     02DE                     i1l1603:
  4473     02DE  0022               	movlb	2	; select bank2
  4474     02DF  128D               	bcf	13,5	;volatile
  4475     02E0                     i1l1605:
  4476                           
  4477                           ;main.c: 14:     SPI1_ExchangeBlock(DISPLAY_T, 3);
  4478     02E0  3003               	movlw	3
  4479     02E1  00F0               	movwf	SPI1_ExchangeBlock@blockSize
  4480     02E2  3000               	movlw	0
  4481     02E3  00F1               	movwf	SPI1_ExchangeBlock@blockSize+1
  4482     02E4  30C6               	movlw	(low (_DISPLAY_T| 0))& (0+255)
  4483     02E5  3182  2230  3182   	fcall	_SPI1_ExchangeBlock
  4484     02E8                     i1l1607:
  4485     02E8  0022               	movlb	2	; select bank2
  4486     02E9  168D               	bsf	13,5	;volatile
  4487     02EA                     i1l275:
  4488     02EA  0008               	return
  4489     02EB                     __end_of_loop:
  4490                           
  4491                           	psect	text28
  4492     02A3                     __ptext28:	
  4493 ;; *************** function _memcpy *****************
  4494 ;; Defined at:
  4495 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  d1              1    wreg     PTR void 
  4498 ;;		 -> DISPLAY_T(3), 
  4499 ;;  s1              1    0[COMMON] PTR const void 
  4500 ;;		 -> DISPLAY_W(3), 
  4501 ;;  n               2    1[COMMON] unsigned int 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  d1              1    5[COMMON] PTR void 
  4504 ;;		 -> DISPLAY_T(3), 
  4505 ;;  s               1    7[COMMON] PTR const unsigned char 
  4506 ;;		 -> DISPLAY_W(3), 
  4507 ;;  d               1    6[COMMON] PTR unsigned char 
  4508 ;;		 -> DISPLAY_T(3), 
  4509 ;;  tmp             1    4[COMMON] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      PTR void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;Total ram usage:        8 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_loop
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532     02A3                     _memcpy:	
  4533                           ;psect for function _memcpy
  4534                           
  4535                           
  4536                           ;incstack = 0
  4537                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4538                           ;memcpy@d1 stored from wreg
  4539     02A3  00F5               	movwf	memcpy@d1
  4540     02A4                     i1l1535:
  4541     02A4  0870               	movf	memcpy@s1,w
  4542     02A5  00F7               	movwf	memcpy@s
  4543     02A6  0875               	movf	memcpy@d1,w
  4544     02A7  00F6               	movwf	memcpy@d
  4545     02A8  2ABB               	goto	i1l961
  4546     02A9                     i1l1537:
  4547     02A9  0877               	movf	memcpy@s,w
  4548     02AA  0086               	movwf	6
  4549     02AB  0187               	clrf	7
  4550     02AC  0801               	movf	1,w
  4551     02AD  00F4               	movwf	memcpy@tmp
  4552     02AE                     i1l1539:
  4553     02AE  3001               	movlw	1
  4554     02AF  00F3               	movwf	??_memcpy
  4555     02B0  0873               	movf	??_memcpy,w
  4556     02B1  07F7               	addwf	memcpy@s,f
  4557     02B2                     i1l1541:
  4558     02B2  0876               	movf	memcpy@d,w
  4559     02B3  0086               	movwf	6
  4560     02B4  0187               	clrf	7
  4561     02B5  0874               	movf	memcpy@tmp,w
  4562     02B6  0081               	movwf	1
  4563     02B7  3001               	movlw	1
  4564     02B8  00F3               	movwf	??_memcpy
  4565     02B9  0873               	movf	??_memcpy,w
  4566     02BA  07F6               	addwf	memcpy@d,f
  4567     02BB                     i1l961:
  4568     02BB  3001               	movlw	1
  4569     02BC  02F1               	subwf	memcpy@n,f
  4570     02BD  3000               	movlw	0
  4571     02BE  3BF2               	subwfb	memcpy@n+1,f
  4572     02BF  0A71               	incf	memcpy@n,w
  4573     02C0  1D03               	skipz
  4574     02C1  2AC6               	goto	u52_21
  4575     02C2  0A72               	incf	memcpy@n+1,w
  4576     02C3  1D03               	btfss	3,2
  4577     02C4  2AC6               	goto	u52_21
  4578     02C5  2AC7               	goto	u52_20
  4579     02C6                     u52_21:
  4580     02C6  2AA9               	goto	i1l1537
  4581     02C7                     u52_20:
  4582     02C7                     i1l964:
  4583     02C7  0008               	return
  4584     02C8                     __end_of_memcpy:
  4585                           
  4586                           	psect	text29
  4587     0230                     __ptext29:	
  4588 ;; *************** function _SPI1_ExchangeBlock *****************
  4589 ;; Defined at:
  4590 ;;		line 100 in file "mcc_generated_files/spi1.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  block           1    wreg     PTR void 
  4593 ;;		 -> DISPLAY_T(3), 
  4594 ;;  blockSize       2    0[COMMON] unsigned int 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  block           1    3[COMMON] PTR void 
  4597 ;;		 -> DISPLAY_T(3), 
  4598 ;;  data            1    4[COMMON] PTR unsigned char 
  4599 ;;		 -> DISPLAY_T(3), 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;Total ram usage:        5 bytes
  4614 ;; Hardware stack levels used: 1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_loop
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622     0230                     _SPI1_ExchangeBlock:	
  4623                           ;psect for function _SPI1_ExchangeBlock
  4624                           
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4628                           ;SPI1_ExchangeBlock@block stored from wreg
  4629     0230  00F3               	movwf	SPI1_ExchangeBlock@block
  4630     0231                     i1l1543:
  4631                           
  4632                           ;mcc_generated_files/spi1.c: 100: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     uint8_t *data =
      +                           block;
  4633     0231  0873               	movf	SPI1_ExchangeBlock@block,w
  4634     0232  00F4               	movwf	SPI1_ExchangeBlock@data
  4635                           
  4636                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4637     0233  2A4A               	goto	i1l1551
  4638     0234                     i1l1545:
  4639                           
  4640                           ;mcc_generated_files/spi1.c: 104:     {;mcc_generated_files/spi1.c: 105:         SSP1BUF
      +                           = *data;
  4641     0234  0874               	movf	SPI1_ExchangeBlock@data,w
  4642     0235  0086               	movwf	6
  4643     0236  0187               	clrf	7
  4644     0237  0801               	movf	1,w
  4645     0238  0024               	movlb	4	; select bank4
  4646     0239  0091               	movwf	17	;volatile
  4647     023A                     i1l330:	
  4648                           ;mcc_generated_files/spi1.c: 106:         while(!PIR1bits.SSP1IF);
  4649                           
  4650     023A  0020               	movlb	0	; select bank0
  4651     023B  1D91               	btfss	17,3	;volatile
  4652     023C  2A3E               	goto	u53_21
  4653     023D  2A3F               	goto	u53_20
  4654     023E                     u53_21:
  4655     023E  2A3A               	goto	i1l330
  4656     023F                     u53_20:
  4657     023F                     i1l332:
  4658                           
  4659                           ;mcc_generated_files/spi1.c: 107:         PIR1bits.SSP1IF = 0;
  4660     023F  1191               	bcf	17,3	;volatile
  4661     0240                     i1l1547:
  4662                           
  4663                           ;mcc_generated_files/spi1.c: 108:         *data++ = SSP1BUF;
  4664     0240  0874               	movf	SPI1_ExchangeBlock@data,w
  4665     0241  0086               	movwf	6
  4666     0242  0187               	clrf	7
  4667     0243  0024               	movlb	4	; select bank4
  4668     0244  0811               	movf	17,w	;volatile
  4669     0245  0081               	movwf	1
  4670     0246                     i1l1549:
  4671     0246  3001               	movlw	1
  4672     0247  00F2               	movwf	??_SPI1_ExchangeBlock
  4673     0248  0872               	movf	??_SPI1_ExchangeBlock,w
  4674     0249  07F4               	addwf	SPI1_ExchangeBlock@data,f
  4675     024A                     i1l1551:
  4676                           
  4677                           ;mcc_generated_files/spi1.c: 103:     while(blockSize--)
  4678     024A  3001               	movlw	1
  4679     024B  02F0               	subwf	SPI1_ExchangeBlock@blockSize,f
  4680     024C  3000               	movlw	0
  4681     024D  3BF1               	subwfb	SPI1_ExchangeBlock@blockSize+1,f
  4682     024E  0A70               	incf	SPI1_ExchangeBlock@blockSize,w
  4683     024F  1D03               	skipz
  4684     0250  2A55               	goto	u54_21
  4685     0251  0A71               	incf	SPI1_ExchangeBlock@blockSize+1,w
  4686     0252  1D03               	btfss	3,2
  4687     0253  2A55               	goto	u54_21
  4688     0254  2A56               	goto	u54_20
  4689     0255                     u54_21:
  4690     0255  2A34               	goto	i1l1545
  4691     0256                     u54_20:
  4692     0256                     i1l334:
  4693     0256  0008               	return
  4694     0257                     __end_of_SPI1_ExchangeBlock:
  4695     007E                     btemp	set	126	;btemp
  4696     007E                     int$flags	set	126
  4697     007E                     wtemp0	set	126
  4698                           
  4699                           	psect	config
  4700                           
  4701                           ;Config register CONFIG1 @ 0x8007
  4702                           ;	Oscillator Selection
  4703                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4704                           ;	Watchdog Timer Enable
  4705                           ;	WDTE = OFF, WDT disabled
  4706                           ;	Power-up Timer Enable
  4707                           ;	PWRTE = OFF, PWRT disabled
  4708                           ;	MCLR Pin Function Select
  4709                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4710                           ;	Flash Program Memory Code Protection
  4711                           ;	CP = OFF, Program memory code protection is disabled
  4712                           ;	Data Memory Code Protection
  4713                           ;	CPD = OFF, Data memory code protection is disabled
  4714                           ;	Brown-out Reset Enable
  4715                           ;	BOREN = ON, Brown-out Reset enabled
  4716                           ;	Clock Out Enable
  4717                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4718                           ;	Internal/External Switchover
  4719                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4720                           ;	Fail-Safe Clock Monitor Enable
  4721                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4722     8007                     	org	32775
  4723     8007  3FE4               	dw	16356
  4724                           
  4725                           ;Config register CONFIG2 @ 0x8008
  4726                           ;	Flash Memory Self-Write Protection
  4727                           ;	WRT = OFF, Write protection off
  4728                           ;	PLL Enable
  4729                           ;	PLLEN = ON, 4x PLL enabled
  4730                           ;	Stack Overflow/Underflow Reset Enable
  4731                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4732                           ;	Brown-out Reset Voltage Selection
  4733                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4734                           ;	In-Circuit Debugger Mode
  4735                           ;	DEBUG = 0x1, unprogrammed default
  4736                           ;	Low-Voltage Programming Enable
  4737                           ;	LVP = ON, Low-voltage programming enabled
  4738     8008                     	org	32776
  4739     8008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    4
    Data        10
    BSS         54
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     75      79
    BANK1            80      0      54
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1155$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1155$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1190$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    memcpy@d1	PTR void  size(1) Largest target is 3
		 -> DISPLAY_T(BANK1[3]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 3
		 -> DISPLAY_T(BANK1[3]), 

    memcpy@s1	PTR const void  size(1) Largest target is 3
		 -> DISPLAY_W(BANK1[3]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 3
		 -> DISPLAY_W(BANK1[3]), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 3
		 -> DISPLAY_T(BANK1[3]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 3
		 -> DISPLAY_T(BANK1[3]), 

    sp__memcpy	PTR void  size(1) Largest target is 3
		 -> DISPLAY_T(BANK1[3]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> loop(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> loop(), NULL(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _loop->_memcpy

Critical Paths under _main in BANK0

    _main->_display_data
    _display_data->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5133
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                       _display_data
 ---------------------------------------------------------------------------------
 (1) _display_data                                         5     4      1    4491
                                             70 BANK0      5     4      1
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4    4282
                                             65 BANK0      5     1      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     3      5    4152
                                             57 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    15      4    3802
                                             43 BANK0     14    10      4
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                14    10      4    2538
                                             29 BANK0     14    10      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    2044
                                             19 BANK0     10     5      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     6      2     932
                                             11 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     726
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     767
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     767
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_CallBack                                       0     0      0     527
                                NULL *
       _TMR1_DefaultInterruptHandler *
                               _loop *
 ---------------------------------------------------------------------------------
 (14) _loop                                                0     0      0     527
                 _SPI1_ExchangeBlock
                             _memcpy
 ---------------------------------------------------------------------------------
 (15) _memcpy                                              8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (15) _SPI1_ExchangeBlock                                  5     3      2     199
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _display_data
     _printf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _xtoa
             _pad
               _fputc
               _fputs
                 _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _loop *
         _SPI1_ExchangeBlock
         _memcpy
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      36       7       67.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      93      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      93      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 29 11:48:11 2023

                           _SPI1_ExchangeBlock 0230                                             l31 03BA  
                                           l25 0368                                             l34 0412  
                                           l28 03B5                                             l67 0325  
                                ?_display_data 0066                                            l116 033E  
                                          l222 03DA                                            l240 03EC  
                                          l312 03AE                                            l243 03E3  
                                          l219 03D3                                            l228 03FC  
                                          l149 040E                                            l246 03F5  
                                          l280 01F7                                            l195 02A2  
                                          l971 0389                                            l991 0204  
                                          l995 022F                                            u400 0157  
                                          u401 0156                                            u410 015D  
                                          u411 015C                                            u420 016D  
                                          u500 0133                                            u421 016C  
                                          u501 0132                                            u430 018D  
                                          u510 0140                                            u431 018C  
                                          u511 013F                                            u600 03BA  
                                          u440 027C                                            u601 03B9  
                                          u441 027B                                            u450 01FD  
                                          u435 0189                                            u451 01FC  
                                          u515 013C                                            u460 0226  
                                          u461 0225                                            u390 03D7  
                                          u470 00D4                                            u550 004F  
                                          u391 03D6                                            u471 00D3  
                                          u551 004E                                            u480 00F6  
                                          u560 0073                                            u465 0222  
                                          u481 00F5                                            u561 0072  
                                          u490 012C                                            u650 01B7  
                                          u491 012B                                            u651 01B6  
                                          u590 0306                                            u495 0128  
                                          u591 0305                                            u664 01BC  
                                          u665 01BB                                            u674 01E4  
                                          u675 01E3                            ?_SPI1_ExchangeBlock 0070  
                              _timer1ReloadVal 007C                                            _pad 01F8  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                      SPI1_ExchangeBlock@block 0073                                           l1001 00DD  
                                         l1011 014F                                           l1020 00CE  
                                         l1007 0105                                           l1027 0308  
                                         l1039 01AE                                           l1047 027C  
                                         l1501 00D4                                           l1511 00F0  
                                         l1503 00D9                                           l1521 0111  
                                         l1513 00F6                                           l1505 00E5  
                                         l1531 0140                                           l1523 0115  
                                         l1515 00FE                                           l1507 00E8  
                                         l1611 02F1                                           l1621 03AA  
                                         l1461 0150                                           l1517 0107  
                                         l1509 00ED                                           l1525 011E  
                                         l1613 02FC                                           l1631 0312  
                                         l1623 03AC                                           l1703 0356  
                                         l1455 03D3                                           l1471 018D  
                                         l1463 0157                                           l1527 012C  
                                         l1519 010D                                           l1615 0306  
                                         l1641 0321                                           l1633 0314  
                                         l1625 0309                                           l1457 03D7  
                                         l1473 01A4                                           l1465 015D  
                                         l1481 026A                                           l1529 0133  
                                         l1561 0062                                           l1553 003D  
                                         l1609 02EB                                           l1643 0324  
                                         l1635 0317                                           l1627 030D  
                                         l1619 03A3                                           l1651 040F  
                                         l1459 03F8                                           l1467 0162  
                                         l1483 026F                                           l1491 0207  
                                         l1563 0069                                           l1555 004F  
                                         l1731 01CE                                           l1723 01B1  
                                         l1645 03AF                                           l1637 0319  
                                         l1629 0310                                           l1661 032D  
                                         l1653 0326                                           l1469 016D  
                                         l1477 0259                                           l1493 0213  
                                         l1485 01F8                                           l1565 0073  
                                         l1557 0057                                           l1581 00B4  
                                         l1733 01DC                                           l1725 01B7  
                                         l1671 0288                                           l1647 03B2  
                                         l1639 031F                                           l1591 0409  
                                         l1663 0331                                           l1655 0328  
                                         l1479 025C                                           l1495 0218  
                                         l1487 01FD                                           l1575 0099  
                                         l1567 007F                                           l1559 005E  
                                         l1735 01E9                                           l1727 01C8  
                                         l1593 03E4                                           l1673 0290  
                                         l1649 03B3                                           l1665 0333  
                                         l1657 032A                                           l1497 0226  
                                         l1489 0202                                           l1569 008D  
                                         l1577 00AA                                           l1729 01CA  
                                         l1737 01EF                                           l1761 034C  
                                         l1595 03DB                                           l1675 0298  
                                         l1667 033B                                           l1659 032C  
                                         l1499 00CF                                           l1755 033F  
                                         l1597 03ED                                           l1677 02A0  
                                         l1669 027D                                           l1757 0342  
                                         l1783 00A5                                           l1759 0343  
                                         l1697 037A                                           l1699 037D  
                                         ?_pad 0033                                           STR_1 039B  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           i1l87 0017  
                                         _PLLR 04D6                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 00A6                                           _main 033F  
                                         _loop 02C8                                           _prec 006B  
                                         pad@i 0039                                           pad@p 0036  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 003B                                           btemp 007E  
                         ??_SPI1_ExchangeBlock 0072                                           _xtoa 00CF  
                                         start 0019                     ??_TMR1_SetInterruptHandler 0022  
                                        ??_pad 0038                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 03BB                                 ??_display_data 0067  
                                        ?_main 0070                                          ?_loop 0070  
                                        ?_xtoa 003D                                          _T1CON 0018  
                                        i1l130 0379                                          i1l142 0396  
                                        i1l152 0413                                          i1l330 023A  
                                        i1l146 03C6                                          i1l332 023F  
                                        i1l334 0256                                          i1l275 02EA  
                                        i1l269 02C8                                          i1l961 02BB  
                                        i1l964 02C7                                          _RCREG 0199  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 004D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        u52_20 02C7                                          u52_21 02C6  
                                        u53_20 023F                                          u61_20 036E  
                                        u53_21 023E                                          u61_21 036D  
                                        u54_20 0256                                          u62_20 03C1  
                                        u70_20 0014                                          u54_21 0255  
                                        u62_21 03C0                                          u70_21 0013  
                                        u57_20 02D2                                          u57_21 02CF  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u58_24 02D4  
                                        u68_20 000A                                          u68_21 0009  
                                        u69_20 000F                                          u69_21 000E  
                                        _TXREG 019A                                          _TXSTA 019E  
                             __end_of_TMR1_ISR 0397                                          _flags 006D  
                               _WDT_Initialize 040F                                          _fputc 0150  
                                        _fputs 0257                                          pad@fp 0033  
                                        _width 0078                                          _putch 03F6  
                      __end_of_TMR1_Initialize 033F                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                                        xtoa@c 004A                                          xtoa@d 003F  
                                        xtoa@i 0048                                          xtoa@p 0046  
                                        xtoa@w 0042                                _TMR1_WriteTimer 0369  
                              __initialization 001B                                   __end_of_main 0356  
                                 __end_of_loop 02EB                                   __end_of_xtoa 0150  
                               ??_EUSART_Write 0020                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 006B                                         ??_loop 0078  
                                       ??_xtoa 0041                         __end_of_WDT_Initialize 0413  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00A2  
                                       ?_fputc 0022                                         ?_fputs 002B  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1601 02D4  
                                       i1l1603 02DE                                         i1l1541 02B2  
                                       i1l1605 02E0                                         i1l1551 024A  
                                       i1l1543 0231                                         i1l1535 02A4  
                                       i1l1607 02E8                                         i1l1545 0234  
                                       i1l1537 02A9                                         i1l1705 038A  
                                       i1l1547 0240                                         i1l1539 02AE  
                                       i1l1707 038C                                         i1l1549 0246  
                                       i1l1709 0393                                         i1l1741 0006  
                                       i1l1743 000A                                         i1l1681 036E  
                                       i1l1745 000F                                         i1l1691 0377  
                                       i1l1683 036F                                         i1l1747 0014  
                                       i1l1693 03BB                                         i1l1685 0371  
                                       i1l1599 02C8                                         i1l1695 03C1  
                                       i1l1687 0373                                         i1l1679 0369  
                                       i1l1689 0375                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097           __end_of_TMR1_DefaultInterruptHandler 0414  
                 _TMR1_DefaultInterruptHandler 0413                                   vfprintf@cfmt 005F  
                                       _memcpy 02A3                                         _printf 037A  
                                       pad@buf 0035                                         fputc@c 0022  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032                                ?_WDT_Initialize 0070  
                             __end_of_vfprintf 0309       TMR1_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 037A                                         xtoa@fp 003D  
                        __end_of_TMR1_CallBack 03C7                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0356                        __end_of__initialization 0039  
                         __end_of_display_data 01F8                             ?_SYSTEM_Initialize 0070  
                           display_data@NUMBER 0066                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 03C7                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_fputc 01AF                                  __end_of_fputs 027D  
                            ??_SPI1_Initialize 0020                                  __end_of_putch 03FD  
                           _spi1_configuration 0397                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0022                                        ??_fputc 0026  
                    __end_of_SYSTEM_Initialize 0369                                        ??_fputs 002D  
                                      ??_putch 0021                                     __pbssBANK0 006B  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 03DB  
                                 _DISPLAY_DATA 00CC                                     __pmaintext 033F  
                                   ??_TMR1_ISR 0078                                     __pintentry 0004  
                                      ?_memcpy 0070                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_printf 0061                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0070  
                                    ?_vfprintf 0059                                      _DISPLAY_T 00C6  
                                    _DISPLAY_W 00C9                                        __ptext1 01AF  
                                      __ptext2 037A                                        __ptext3 02EB  
                                      __ptext4 003D                                        __ptext5 00CF  
                                      __ptext6 01F8                                        __ptext7 0257  
                                      __ptext8 0150                                        __ptext9 03F6  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 03AF                       ??_PIN_MANAGER_Initialize 0020  
                    ?_TMR1_SetInterruptHandler 0020                                        clrloop0 0404  
                         end_of_initialization 0039          __end_of_EUSART_SetOverrunErrorHandler 03E4  
                _EUSART_SetOverrunErrorHandler 03DB                                        memcpy@d 0076  
                                      memcpy@n 0071                                        memcpy@s 0077  
                                      fputc@fp 0024                                        init_ram 03FD  
                                      fputs@fp 002B                                        initloop 03FE  
                            _EUSART_Initialize 027D                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 00CF                                      _RCSTAbits 019D  
                             vfpfcnvrt@convarg 0053                                     ??_vfprintf 005E  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                                 _display_data 01AF                                      _TRISBbits 008D  
                       SPI1_ExchangeBlock@data 0074                      __end_of_EUSART_Initialize 02A3  
                              _SPI1_Initialize 03A3                                      _TXSTAbits 019E  
                          display_data@SEGMENT 006A                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 004E                                    vfpfcnvrt@cp 0057  
                                  vfpfcnvrt@fp 004B                                   _EUSART_Write 03D1  
                               __end_of_memcpy 02C8                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 038A                            start_initialization 001B  
                                  __end_of_pad 0230                                    putch@txData 0021  
               ?_EUSART_SetOverrunErrorHandler 0020                                    vfprintf@fmt 005B  
                   _EUSART_FramingErrorHandler 00A4                         _EUSART_SetErrorHandler 03ED  
                                  __pdataBANK1 00CC                                       ??_memcpy 0073  
                                     ??_printf 0065                                    __pbssCOMMON 0078  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                      __end_of_SPI1_Initialize 03AF                         _PIN_MANAGER_Initialize 0309  
             __end_of_TMR1_SetInterruptHandler 040F                   ??_INTERRUPT_InterruptManager 0078  
                   __end_of_SPI1_ExchangeBlock 0257                                  _TMR1_CallBack 03BB  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                    clear_ram0 0403                                       _PIE1bits 0091  
                            _eusartRxLastError 006E                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 038A                                       _SSP1STAT 0214  
                                    _vfpfcnvrt 003D                                      _xtoa$1217 0044  
                            ??_TMR1_Initialize 0022                               ?_SPI1_Initialize 0070  
                               ?_TMR1_CallBack 0070                                      memcpy@tmp 0074  
                                   vfprintf@ap 005D                                     vfprintf@fp 0059  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00A0  
                                   ?_vfpfcnvrt 004B                       _TMR1_SetInterruptHandler 0409  
                        _TMR1_InterruptHandler 007A                                       __ptext10 03D1  
                                     __ptext11 0356                                       __ptext20 03E4  
                                     __ptext12 040F                                       __ptext21 03ED  
                                     __ptext13 0326                                     _T1GCONbits 0019  
                                     __ptext14 0409                                       __ptext23 038A  
                                     __ptext15 03A3                                       __ptext24 0369  
                                     __ptext16 0309                                       __ptext25 03BB  
                                     __ptext17 03AF                                       __ptext26 0413  
                                     __ptext18 027D                                       __ptext27 02C8  
                                     __ptext19 03DB                                       __ptext28 02A3  
                                     __ptext29 0230                                   _SSP1CON1bits 0215  
                      ?_EUSART_SetErrorHandler 0020  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E                                       _vfprintf 02EB  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0061          __end_of_EUSART_SetFramingErrorHandler 03ED  
                _EUSART_SetFramingErrorHandler 03E4                              ??_TMR1_WriteTimer 0072  
                  SPI1_ExchangeBlock@blockSize 0070                                     _INTCONbits 000B  
                                     memcpy@d1 0075                                       memcpy@s1 0070  
                              ??_TMR1_CallBack 0078                                       intlevel1 0000  
                              display_data@tmp 0069                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 03F6                                       printf@ap 0065  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    ??_vfpfcnvrt 004F  
                                __pstringtext1 0397                                  __pstringtext2 0000  
                           EUSART_Write@txData 0020                 __end_of_PIN_MANAGER_Initialize 0326  
                              _TMR1_Initialize 0326                     __end_of_spi1_configuration 039B  
